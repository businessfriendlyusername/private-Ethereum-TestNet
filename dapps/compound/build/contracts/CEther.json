{
  "contractName": "CEther",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "comptroller_",
          "type": "address"
        },
        {
          "internalType": "contract InterestRateModel",
          "name": "interestRateModel_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialExchangeRateMantissa_",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        },
        {
          "internalType": "address payable",
          "name": "admin_",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "cashPrior",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestAccumulated",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowIndex",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "AccrueInterest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountBorrows",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "Borrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "error",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "info",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "detail",
          "type": "uint256"
        }
      ],
      "name": "Failure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "LiquidateBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mintTokens",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract ComptrollerInterface",
          "name": "oldComptroller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract ComptrollerInterface",
          "name": "newComptroller",
          "type": "address"
        }
      ],
      "name": "NewComptroller",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract InterestRateModel",
          "name": "oldInterestRateModel",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract InterestRateModel",
          "name": "newInterestRateModel",
          "type": "address"
        }
      ],
      "name": "NewMarketInterestRateModel",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldReserveFactorMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newReserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewReserveFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "accountBorrows",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalBorrows",
          "type": "uint256"
        }
      ],
      "name": "RepayBorrow",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "benefactor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "addAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "admin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reduceAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newTotalReserves",
          "type": "uint256"
        }
      ],
      "name": "ReservesReduced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reduceAmount",
          "type": "uint256"
        }
      ],
      "name": "_reduceReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "newComptroller",
          "type": "address"
        }
      ],
      "name": "_setComptroller",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract InterestRateModel",
          "name": "newInterestRateModel",
          "type": "address"
        }
      ],
      "name": "_setInterestRateModel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newReserveFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setReserveFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "accrualBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "accrueInterest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOfUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "borrowBalanceStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "borrowRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "comptroller",
      "outputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "exchangeRateCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeRateStored",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountSnapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCash",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract ComptrollerInterface",
          "name": "comptroller_",
          "type": "address"
        },
        {
          "internalType": "contract InterestRateModel",
          "name": "interestRateModel_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialExchangeRateMantissa_",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals_",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "interestRateModel",
      "outputs": [
        {
          "internalType": "contract InterestRateModel",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isCToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveFactorMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "seize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "supplyRatePerBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalBorrows",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "totalBorrowsCurrent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalReserves",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        }
      ],
      "name": "redeemUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "repayBorrow",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "repayBorrowBehalf",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "contract CToken",
          "name": "cTokenCollateral",
          "type": "address"
        }
      ],
      "name": "liquidateBorrow",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "151:6534:5:-;;;688:610;8:9:-1;5:2;;;30:1;27;20:12;5:2;688:610:5;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;688:610:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;688:610:5;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;688:610:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;688:610:5;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;688:610:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1080:10;1072:5;;:18;;;;;;;;;;;;;;;;;;1101:101;1112:12;1126:18;1146:28;1176:5;1183:7;1192:9;1101:10;;;:101;;;:::i;:::-;1285:6;1277:5;;:14;;;;;;;;;;;;;;;;;;688:610;;;;;;;151:6534;;871:1498:6;1219:5;;;;;;;;;;;1205:19;;:10;:19;;;1197:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1305:1;1283:18;;:23;:43;;;;;1325:1;1310:11;;:16;1283:43;1275:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1444:28;1414:27;:58;;;;1520:1;1490:27;;:31;1482:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:8;1627:29;1643:12;1627:15;;;:29;;;:::i;:::-;1616:40;;1686:14;1681:20;;;;;;;;1674:3;:27;1666:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1869:16;:14;;;:16;;;:::i;:::-;1848:18;:37;;;;447:4:16;1895:11:6;:25;;;;2017:46;2044:18;2017:26;;;:46;;;:::i;:::-;2011:52;;2093:14;2088:20;;;;;;;;2081:3;:27;2073:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2165:5;2158:4;:12;;;;;;;;;;;;:::i;:::-;;2189:7;2180:6;:16;;;;;;;;;;;;:::i;:::-;;2217:9;2206:8;;:20;;;;;;;;;;;;;;;;;;2358:4;2344:11;;:18;;;;;;;;;;;;;;;;;;871:1498;;;;;;;:::o;52800:718::-;52878:4;52945:5;;;;;;;;;;;52931:19;;:10;:19;;;52927:122;;52973:65;52978:18;52998:39;52973:4;;;:65;;;:::i;:::-;52966:72;;;;52927:122;53059:35;53097:11;;;;;;;;;;;53059:49;;53192:14;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53192:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53192:30:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53192:30:6;;;;;;;;;;;;;;;;53184:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53334:14;53320:11;;:28;;;;;;;;;;;;;;;;;;53427:46;53442:14;53458;53427:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53496:14;53491:20;;;;;;;;53484:27;;;52800:718;;;;:::o;9126:91::-;9175:4;9198:12;9191:19;;9126:91;:::o;62371:1271::-;62465:4;62565:38;62665:5;;;;;;;;;;;62651:19;;:10;:19;;;62647:130;;62693:73;62698:18;62718:47;62693:4;;;:73;;;:::i;:::-;62686:80;;;;;62647:130;62900:16;:14;;;:16;;;:::i;:::-;62878:18;;:38;62874:153;;62939:77;62944:22;62968:47;62939:4;;;:77;;;:::i;:::-;62932:84;;;;;62874:153;63118:17;;;;;;;;;;;63095:40;;63235:20;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;63235:42:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;63235:42:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;63235:42:6;;;;;;;;;;;;;;;;63227:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63404:20;63384:17;;:40;;;;;;;;;;;;;;;;;;63527:70;63554:20;63576;63527:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63620:14;63615:20;;;;;;;;63608:27;;;62371:1271;;;;:::o;7233:149:15:-;7294:4;7315:33;7328:3;7323:9;;;;;;;;7339:4;7334:10;;;;;;;;7346:1;7315:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7371:3;7366:9;;;;;;;;7359:16;;7233:149;;;;:::o;151:6534:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "151:6534:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4230:8;4243:23;4256:9;4243:12;:23::i;:::-;4229:37;;;4276:34;4291:3;4276:34;;;;;;;;;;;;;;;;;:14;:34::i;:::-;4190:127;151:6534;289:18:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;289:18:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;289:18:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6365:232:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6365:232:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6365:232:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1475:131:5;;;:::i;:::-;;1541:33:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1541:33:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10511:221:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10511:221:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10511:221:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2161:23:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2161:23:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13289:257:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13289:257:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5712:193;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5712:193:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5712:193:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;985:35:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;985:35:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;475:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;475:21:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7601:349:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7601:349:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7601:349:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15080:86;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15080:86:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;52800:718;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52800:718:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;52800:718:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1935:24:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1935:24:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3016:152:5;;;:::i;:::-;;1106:39:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1106:39:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;58523:563:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;58523:563:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;58523:563:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1659:30:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1659:30:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7243:110:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7243:110:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7243:110:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10038:189;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10038:189:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2408:131:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2408:131:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2408:131:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2060:25:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2060:25:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;380:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;380:20:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;380:20:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10934:283:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10934:283:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10934:283:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;871:1498;;8:9:-1;5:2;;;30:1;27;20:12;5:2;871:1498:6;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;871:1498:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;871:1498:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;871:1498:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;871:1498:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;871:1498:6;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;871:1498:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;871:1498:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;871:1498:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;871:1498:6;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15753:3395;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15753:3395:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5231:183;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5231:183:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5231:183:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1805:23:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1805:23:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3891:233:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3891:233:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9716:182:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9716:182:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;47572:192;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47572:192:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;47572:192:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;50958:631;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50958:631:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;50958:631:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12851:195;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12851:195:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8288:685;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8288:685:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8288:685:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2800:111:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2800:111:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2800:111:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1949;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1949:111:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1949:111:5;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6919:141:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6919:141:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6919:141:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3352:196:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3352:196:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;51860:722:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51860:722:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;61422:627;;8:9:-1;5:2;;;30:1;27;20:12;5:2;61422:627:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;61422:627:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1242:42:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1242:42:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;879:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;879:28:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;9387:159:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9387:159:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;53814:599;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53814:599:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53814:599:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3155:36:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3155:36:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;19538:539:6;19608:4;19614;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;19630:10;19643:16;:14;:16::i;:::-;19630:29;;19687:14;19682:20;;;;;;;;19673:5;:29;19669:249;;19844:59;19855:5;19849:12;;;;;;;;19863:39;19844:4;:59::i;:::-;19905:1;19836:71;;;;;;;;;;19669:249;20037:33;20047:10;20059;20037:9;:33::i;:::-;20030:40;;;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;19538:539;;;:::o;5990:693:5:-;6095:14;6090:20;;;;;;;;6079:7;:31;6075:68;;;6126:7;;6075:68;6153:24;6214:1;6196:7;6190:21;:25;6180:36;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;6180:36:5;;;;6153:63;;6226:6;6252:1;6248:5;;6243:103;6265:7;6259:21;6255:1;:25;6243:103;;;6324:7;6333:1;6318:17;;;;;;;;;;;;;;;;;6301:11;6313:1;6301:14;;;;;;;;;;;:34;;;;;;;;;;;6282:3;;;;;;;6243:103;;;6386:2;6375:15;;6356:11;6370:1;6368;:3;6356:16;;;;;;;;;;;:34;;;;;;;;;;;6430:2;6419:15;;6400:11;6414:1;6412;:3;6400:16;;;;;;;;;;;:34;;;;;;;;;;;6491:2;6481:7;:12;;;;;;6474:2;:21;6463:34;;6444:11;6458:1;6456;:3;6444:16;;;;;;;;;;;:53;;;;;;;;;;;6554:2;6544:7;:12;;;;;;6537:2;:21;6526:34;;6507:11;6521:1;6519;:3;6507:16;;;;;;;;;;;:53;;;;;;;;;;;6600:2;6589:15;;6570:11;6584:1;6582;:3;6570:16;;;;;;;;;;;:34;;;;;;;;;;;6639:14;6634:20;;;;;;;;6623:7;:31;6663:11;6615:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6615:61:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5990:693;;;;;:::o;289:18:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6365:232:6:-;6433:4;6449:11;6463:10;6449:24;;6518:6;6483:18;:23;6502:3;6483:23;;;;;;;;;;;;;;;:32;6507:7;6483:32;;;;;;;;;;;;;;;:41;;;;6553:7;6539:30;;6548:3;6539:30;;;6562:6;6539:30;;;;;;;;;;;;;;;;;;6586:4;6579:11;;;6365:232;;;;:::o;1475:131:5:-;1519:8;1532:23;1545:9;1532:12;:23::i;:::-;1518:37;;;1565:34;1580:3;1565:34;;;;;;;;;;;;;;;;;:14;:34::i;:::-;1475:131;:::o;1541:33:7:-;;;;:::o;10511:221:6:-;10589:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;10638:14;10633:20;;;;;;;;10613:16;:14;:16::i;:::-;:40;10605:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10697:28;10717:7;10697:19;:28::i;:::-;10690:35;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;10511:221;;;:::o;2161:23:7:-;;;;:::o;13289:257:6:-;13340:4;13357:13;13372:11;13387:28;:26;:28::i;:::-;13356:59;;;;13440:18;13433:25;;;;;;;;:3;:25;;;;;;;;;13425:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13533:6;13526:13;;;;13289:257;:::o;5712:193::-;5807:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;5883:14;5878:20;;;;;;;;5830:44;5845:10;5857:3;5862;5867:6;5830:14;:44::i;:::-;:68;5823:75;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;5712:193;;;;;:::o;985:35:7:-;;;;;;;;;;;;;:::o;475:21::-;;;;;;;;;;;;;:::o;7601:349:6:-;7663:4;7679:23;;:::i;:::-;7705:38;;;;;;;;7720:21;:19;:21::i;:::-;7705:38;;;7679:64;;7754:14;7770:12;7786:53;7804:12;7818:13;:20;7832:5;7818:20;;;;;;;;;;;;;;;;7786:17;:53::i;:::-;7753:86;;;;7865:18;7857:26;;;;;;;;:4;:26;;;;;;;;;7849:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7936:7;7929:14;;;;;7601:349;;;:::o;15080:86::-;15122:4;15145:14;:12;:14::i;:::-;15138:21;;15080:86;:::o;52800:718::-;52878:4;52945:5;;;;;;;;;;;52931:19;;:10;:19;;;52927:122;;52973:65;52978:18;52998:39;52973:4;:65::i;:::-;52966:72;;;;52927:122;53059:35;53097:11;;;;;;;;;;;53059:49;;53192:14;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53192:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53192:30:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;53192:30:6;;;;;;;;;;;;;;;;53184:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53334:14;53320:11;;:28;;;;;;;;;;;;;;;;;;53427:46;53442:14;53458;53427:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53496:14;53491:20;;;;;;;;53484:27;;;52800:718;;;;:::o;1935:24:7:-;;;;:::o;3016:152:5:-;3067:8;3080:30;3100:9;3080:19;:30::i;:::-;3066:44;;;3120:41;3135:3;3120:41;;;;;;;;;;;;;;;;;:14;:41::i;:::-;3016:152;:::o;1106:39:7:-;;;;;;;;;;;;;:::o;58523:563:6:-;58598:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;58614:10;58627:16;:14;:16::i;:::-;58614:29;;58671:14;58666:20;;;;;;;;58657:5;:29;58653:274;;58846:70;58857:5;58851:12;;;;;;;;58865:50;58846:4;:70::i;:::-;58839:77;;;;;58653:274;59045:34;59066:12;59045:20;:34::i;:::-;59038:41;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;58523:563;;;:::o;1659:30:7:-;;;;:::o;7243:110:6:-;7300:7;7326:13;:20;7340:5;7326:20;;;;;;;;;;;;;;;;7319:27;;7243:110;;;:::o;10038:189::-;10100:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;10149:14;10144:20;;;;;;;;10124:16;:14;:16::i;:::-;:40;10116:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10208:12;;10201:19;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;10038:189;:::o;2408:131:5:-;2471:4;2494:38;2519:12;2494:24;:38::i;:::-;2487:45;;2408:131;;;:::o;2060:25:7:-;;;;:::o;380:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10934:283:6:-;11001:4;11018:13;11033:11;11048:36;11076:7;11048:27;:36::i;:::-;11017:67;;;;11109:18;11102:25;;;;;;;;:3;:25;;;;;;;;;11094:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11204:6;11197:13;;;;10934:283;;;:::o;871:1498::-;1219:5;;;;;;;;;;;1205:19;;:10;:19;;;1197:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1305:1;1283:18;;:23;:43;;;;;1325:1;1310:11;;:16;1283:43;1275:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1444:28;1414:27;:58;;;;1520:1;1490:27;;:31;1482:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:8;1627:29;1643:12;1627:15;:29::i;:::-;1616:40;;1686:14;1681:20;;;;;;;;1674:3;:27;1666:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1869:16;:14;:16::i;:::-;1848:18;:37;;;;447:4:16;1895:11:6;:25;;;;2017:46;2044:18;2017:26;:46::i;:::-;2011:52;;2093:14;2088:20;;;;;;;;2081:3;:27;2073:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2165:5;2158:4;:12;;;;;;;;;;;;:::i;:::-;;2189:7;2180:6;:16;;;;;;;;;;;;:::i;:::-;;2217:9;2206:8;;:20;;;;;;;;;;;;;;;;;;2358:4;2344:11;;:18;;;;;;;;;;;;;;;;;;871:1498;;;;;;;:::o;15753:3395::-;15795:4;15811:35;;:::i;:::-;15856:14;15873;:12;:14::i;:::-;15856:31;;15981:17;;;;;;;;;;;:31;;;16013:9;16024:12;;16038:13;;15981:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15981:71:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15981:71:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15981:71:6;;;;;;;;;;;;;;;;15955:4;:23;;:97;;;;;644:9:7;16070:4:6;:23;;;:48;;16062:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16236:16;:14;:16::i;:::-;16210:4;:23;;:42;;;;;16373:52;16381:4;:23;;;16406:18;;16373:7;:52::i;:::-;16340:4;:12;;16354:4;:15;;16339:86;;;;;;;;;;;;;;;;;;;;;;;;;;16459:18;16443:34;;;;;;;;:4;:12;;;:34;;;;;;;;;16435:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17037:68;17047:40;;;;;;;;17062:4;:23;;;17047:40;;;17089:4;:15;;;17037:9;:68::i;:::-;16993:112;;;16994:4;:12;;17008:4;:25;;16993:112;;;;;;;;;;;;;;;;;;;;;;;;;17135:18;17119:34;;;;;;;;:4;:12;;;:34;;;;;;;;;17115:191;;17176:119;17187:16;17205:69;17281:4;:12;;;17276:18;;;;;;;;17176:10;:119::i;:::-;17169:126;;;;;;17115:191;17359:58;17377:4;:25;;;17404:12;;17359:17;:58::i;:::-;17317:4;:12;;17331:4;:24;;17316:101;;;;;;;;;;;;;;;;;;;;;;;;;;17447:18;17431:34;;;;;;;;:4;:12;;;:34;;;;;;;;;17427:189;;17488:117;17499:16;17517:67;17591:4;:12;;;17586:18;;;;;;;;17488:10;:117::i;:::-;17481:124;;;;;;17427:189;17665:47;17673:4;:24;;;17699:12;;17665:7;:47::i;:::-;17627:4;:12;;17641:4;:20;;17626:86;;;;;;;;;;;;;;;;;;;;;;;;;;17742:18;17726:34;;;;;;;;:4;:12;;;:34;;;;;;;;;17722:186;;17783:114;17794:16;17812:64;17883:4;:12;;;17878:18;;;;;;;;17783:10;:114::i;:::-;17776:121;;;;;;17722:186;17958:105;17983:38;;;;;;;;17998:21;;17983:38;;;18023:4;:24;;;18049:13;;17958:24;:105::i;:::-;17919:4;:12;;17933:4;:21;;17918:145;;;;;;;;;;;;;;;;;;;;;;;;;;18093:18;18077:34;;;;;;;;:4;:12;;;:34;;;;;;;;;18073:187;;18134:115;18145:16;18163:65;18235:4;:12;;;18230:18;;;;;;;;18134:10;:115::i;:::-;18127:122;;;;;;18073:187;18308:77;18333:4;:25;;;18360:11;;18373;;18308:24;:77::i;:::-;18271:4;:12;;18285:4;:19;;18270:115;;;;;;;;;;;;;;;;;;;;;;;;;;18415:18;18399:34;;;;;;;;:4;:12;;;:34;;;;;;;;;18395:185;;18456:113;18467:16;18485:63;18555:4;:12;;;18550:18;;;;;;;;18456:10;:113::i;:::-;18449:120;;;;;;18395:185;18797:4;:23;;;18776:18;:44;;;;18844:4;:19;;;18830:11;:33;;;;18888:4;:20;;;18873:12;:35;;;;18934:4;:21;;;18918:13;:37;;;;19017:86;19032:9;19043:4;:24;;;19069:4;:19;;;19090:12;;19017:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19126:14;19121:20;;;;;;;;19114:27;;;;15753:3395;;:::o;5231:183::-;5309:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;5392:14;5387:20;;;;;;;;5332:51;5347:10;5359;5371:3;5376:6;5332:14;:51::i;:::-;:75;5325:82;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;5231:183;;;;:::o;1805:23:7:-;;;;:::o;3891:233:5:-;3987:8;4000:62;4024:8;4034:9;4045:16;4000:23;:62::i;:::-;3986:76;;;4072:45;4087:3;4072:45;;;;;;;;;;;;;;;;;:14;:45::i;:::-;3891:233;;;:::o;9716:182:6:-;9769:4;9792:17;;;;;;;;;;;:31;;;9824:14;:12;:14::i;:::-;9840:12;;9854:13;;9869:21;;9792:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9792:99:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9792:99:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9792:99:6;;;;;;;;;;;;;;;;9785:106;;9716:182;:::o;47572:192::-;47674:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;47697:60;47711:10;47723;47735:8;47745:11;47697:13;:60::i;:::-;47690:67;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;47572:192;;;;;:::o;50958:631::-;51035:4;51101:5;;;;;;;;;;;51087:19;;:10;:19;;;51083:124;;51129:67;51134:18;51154:41;51129:4;:67::i;:::-;51122:74;;;;51083:124;51277:23;51303:12;;;;;;;;;;;51277:38;;51398:15;51383:12;;:30;;;;;;;;;;;;;;;;;;51495:49;51511:15;51528;51495:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51567:14;51562:20;;;;;;;;51555:27;;;50958:631;;;;:::o;12851:195::-;12911:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;12960:14;12955:20;;;;;;;;12935:16;:14;:16::i;:::-;:40;12927:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13019:20;:18;:20::i;:::-;13012:27;;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;12851:195;:::o;8288:685::-;8356:4;8362;8368;8374;8390:18;8411:13;:22;8425:7;8411:22;;;;;;;;;;;;;;;;8390:43;;8443:18;8471:25;8507:14;8556:36;8584:7;8556:27;:36::i;:::-;8532:60;;;;;;;;8614:18;8606:26;;;;;;;;:4;:26;;;;;;;;;8602:97;;8661:16;8656:22;;;;;;;;8680:1;8683;8686;8648:40;;;;;;;;;;;;;;;;;;;;;;;8602:97;8740:28;:26;:28::i;:::-;8709:59;;;;;;;;8790:18;8782:26;;;;;;;;:4;:26;;;;;;;;;8778:97;;8837:16;8832:22;;;;;;;;8856:1;8859;8862;8824:40;;;;;;;;;;;;;;;;;;;;;;;8778:97;8898:14;8893:20;;;;;;;;8915:13;8930;8945:20;8885:81;;;;;;;;;;;;8288:685;;;;;;:::o;2800:111:5:-;2853:4;2876:28;2891:12;2876:14;:28::i;:::-;2869:35;;2800:111;;;:::o;1949:::-;2002:4;2025:28;2040:12;2025:14;:28::i;:::-;2018:35;;1949:111;;;:::o;6919:141:6:-;6993:7;7019:18;:25;7038:5;7019:25;;;;;;;;;;;;;;;:34;7045:7;7019:34;;;;;;;;;;;;;;;;7012:41;;6919:141;;;;:::o;3352:196:5:-;3425:8;3438:46;3464:8;3474:9;3438:25;:46::i;:::-;3424:60;;;3494:47;3509:3;3494:47;;;;;;;;;;;;;;;;;:14;:47::i;:::-;3352:196;;:::o;51860:722:6:-;51902:4;52008:12;;;;;;;;;;;51994:26;;:10;:26;;;;:54;;;;52046:1;52024:24;;:10;:24;;;51994:54;51990:162;;;52071:70;52076:18;52096:44;52071:4;:70::i;:::-;52064:77;;;;51990:162;52214:16;52233:5;;;;;;;;;;;52214:24;;52248:23;52274:12;;;;;;;;;;;52248:38;;52352:12;;;;;;;;;;;52344:5;;:20;;;;;;;;;;;;;;;;;;52433:1;52410:12;;:25;;;;;;;;;;;;;;;;;;52451;52460:8;52470:5;;;;;;;;;;;52451:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52491:46;52507:15;52524:12;;;;;;;;;;;52491:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52560:14;52555:20;;;;;;;;52548:27;;;;51860:722;;:::o;61422:627::-;61509:4;61525:10;61538:16;:14;:16::i;:::-;61525:29;;61582:14;61577:20;;;;;;;;61568:5;:29;61564:297;;61772:78;61783:5;61777:12;;;;;;;;61791:58;61772:4;:78::i;:::-;61765:85;;;;;61564:297;61994:48;62021:20;61994:26;:48::i;:::-;61987:55;;;61422:627;;;;:::o;1242:42:7:-;;;;;;;;;;;;;:::o;879:28::-;;;;;;;;;;;;;:::o;9387:159:6:-;9440:4;9463:17;;;;;;;;;;;:31;;;9495:14;:12;:14::i;:::-;9511:12;;9525:13;;9463:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9463:76:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9463:76:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9463:76:6;;;;;;;;;;;;;;;;9456:83;;9387:159;:::o;53814:599::-;53903:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;53919:10;53932:16;:14;:16::i;:::-;53919:29;;53976:14;53971:20;;;;;;;;53962:5;:29;53958:283;;54157:73;54168:5;54162:12;;;;;;;;54176:53;54157:4;:73::i;:::-;54150:80;;;;;53958:283;54358:48;54381:24;54358:22;:48::i;:::-;54351:55;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;53814:599;;;:::o;3155:36:7:-;3187:4;3155:36;:::o;7233:149:15:-;7294:4;7315:33;7328:3;7323:9;;;;;;;;7339:4;7334:10;;;;;;;;7346:1;7315:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7371:3;7366:9;;;;;;;;7359:16;;7233:149;;;;:::o;20768:3348:6:-;20838:4;20844;20899:12;20914:11;;;;;;;;;;;:23;;;20946:4;20953:6;20961:10;20914:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20914:58:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20914:58:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20914:58:6;;;;;;;;;;;;;;;;20899:73;;20997:1;20986:7;:12;20982:143;;21022:88;21033:27;21062:38;21102:7;21022:10;:88::i;:::-;21112:1;21014:100;;;;;;;;;;20982:143;21232:16;:14;:16::i;:::-;21210:18;;:38;21206:143;;21272:62;21277:22;21301:32;21272:4;:62::i;:::-;21336:1;21264:74;;;;;;;;;;21206:143;21359:25;;:::i;:::-;21450:35;21466:6;21474:10;21450:15;:35::i;:::-;21439:4;:8;;:46;;;;;;;;;;;;;;;;;;;;;;;21511:14;21499:26;;;;;;;;:4;:8;;;:26;;;;;;;;;21495:126;;21549:57;21554:4;:8;;;21564:41;21549:4;:57::i;:::-;21608:1;21541:69;;;;;;;;;;;21495:126;21675:28;:26;:28::i;:::-;21632:4;:12;;21646:4;:25;;21631:72;;;;;;;;;;;;;;;;;;;;;;;;;;21733:18;21717:34;;;;;;;;:4;:12;;;:34;;;;;;;;;21713:169;;21775:92;21786:16;21804:42;21853:4;:12;;;21848:18;;;;;;;;21775:10;:92::i;:::-;21869:1;21767:104;;;;;;;;;;;21713:169;22500:32;22513:6;22521:10;22500:12;:32::i;:::-;22476:4;:21;;:56;;;;;22752:89;22775:4;:21;;;22798:42;;;;;;;;22813:4;:25;;;22798:42;;;22752:22;:89::i;:::-;22719:4;:12;;22733:4;:15;;22718:123;;;;;;;;;;;;;;;;;;;;;;;;;;22875:18;22859:34;;;;;;;;:4;:12;;;:34;;;;;;;;;22851:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23227:37;23235:11;;23248:4;:15;;;23227:7;:37::i;:::-;23190:4;:12;;23204:4;:19;;23189:75;;;;;;;;;;;;;;;;;;;;;;;;;;23298:18;23282:34;;;;;;;;:4;:12;;;:34;;;;;;;;;23274:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23412:47;23420:13;:21;23434:6;23420:21;;;;;;;;;;;;;;;;23443:4;:15;;;23412:7;:47::i;:::-;23373:4;:12;;23387:4;:21;;23372:87;;;;;;;;;;;;;;;;;;;;;;;;;;23493:18;23477:34;;;;;;;;:4;:12;;;:34;;;;;;;;;23469:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23649:4;:19;;;23635:11;:33;;;;23702:4;:21;;;23678:13;:21;23692:6;23678:21;;;;;;;;;;;;;;;:45;;;;23796:52;23801:6;23809:4;:21;;;23832:4;:15;;;23796:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23887:6;23863:48;;23880:4;23863:48;;;23895:4;:15;;;23863:48;;;;;;;;;;;;;;;;;;23961:11;;;;;;;;;;;:22;;;23992:4;23999:6;24007:4;:21;;;24030:4;:15;;;23961:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23961:85:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23961:85:6;;;;24070:14;24065:20;;;;;;;;24087:4;:21;;;24057:52;;;;;;20768:3348;;;;;;:::o;13803:1113::-;13864:9;13875:4;13910:1;13895:11;;:16;13891:1019;;;14063:18;14083:27;;14055:56;;;;;;13891:1019;14287:14;14304;:12;:14::i;:::-;14287:31;;14332:33;14379:23;;:::i;:::-;14416:17;14490:54;14505:9;14516:12;;14530:13;;14490:14;:54::i;:::-;14448:96;;;;;;;;14573:18;14562:29;;;;;;;;:7;:29;;;;;;;;;14558:87;;14619:7;14628:1;14611:19;;;;;;;;;;;;;14558:87;14685:49;14692:28;14722:11;;14685:6;:49::i;:::-;14659:75;;;;;;;;14763:18;14752:29;;;;;;;;:7;:29;;;;;;;;;14748:87;;14809:7;14818:1;14801:19;;;;;;;;;;;;;14748:87;14857:18;14877:12;:21;;;14849:50;;;;;;;;13803:1113;;;:::o;2821:2157::-;2919:4;2978:12;2993:11;;;;;;;;;;;:27;;;3029:4;3036:3;3041;3046:6;2993:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2993:60:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2993:60:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2993:60:6;;;;;;;;;;;;;;;;2978:75;;3078:1;3067:7;:12;3063:142;;3102:92;3113:27;3142:42;3186:7;3102:10;:92::i;:::-;3095:99;;;;;3063:142;3268:3;3261:10;;:3;:10;;;3257:103;;;3294:55;3299:15;3316:32;3294:4;:55::i;:::-;3287:62;;;;;3257:103;3434:22;3459:1;3434:26;;3485:3;3474:14;;:7;:14;;;3470:156;;;3529:2;3504:28;;3470:156;;;3583:18;:23;3602:3;3583:23;;;;;;;;;;;;;;;:32;3607:7;3583:32;;;;;;;;;;;;;;;;3563:52;;3470:156;3701:17;3728;3755;3782;3836:34;3844:17;3863:6;3836:7;:34::i;:::-;3810:60;;;;;;;;3895:18;3884:29;;;;;;;;:7;:29;;;;;;;;;3880:123;;3936:56;3941:16;3959:32;3936:4;:56::i;:::-;3929:63;;;;;;;;;;3880:123;4039:35;4047:13;:18;4061:3;4047:18;;;;;;;;;;;;;;;;4067:6;4039:7;:35::i;:::-;4013:61;;;;;;;;4099:18;4088:29;;;;;;;;:7;:29;;;;;;;;;4084:122;;4140:55;4145:16;4163:31;4140:4;:55::i;:::-;4133:62;;;;;;;;;;4084:122;4242:35;4250:13;:18;4264:3;4250:18;;;;;;;;;;;;;;;;4270:6;4242:7;:35::i;:::-;4216:61;;;;;;;;4302:18;4291:29;;;;;;;;:7;:29;;;;;;;;;4287:120;;4343:53;4348:16;4366:29;4343:4;:53::i;:::-;4336:60;;;;;;;;;;4287:120;4555:12;4534:13;:18;4548:3;4534:18;;;;;;;;;;;;;;;:33;;;;4598:12;4577:13;:18;4591:3;4577:18;;;;;;;;;;;;;;;:33;;;;4706:2;4680:17;:29;4676:107;;4760:12;4725:18;:23;4744:3;4725:23;;;;;;;;;;;;;;;:32;4749:7;4725:32;;;;;;;;;;;;;;;:47;;;;4676:107;4851:3;4837:26;;4846:3;4837:26;;;4856:6;4837:26;;;;;;;;;;;;;;;;;;4874:11;;;;;;;;;;;:26;;;4909:4;4916:3;4921;4926:6;4874:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4874:59:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4874:59:6;;;;4956:14;4951:20;;;;;;;;4944:27;;;;;;;;2821:2157;;;;;;;:::o;2448:306:16:-;2525:9;2536:4;2553:13;2568:18;;:::i;:::-;2590:20;2600:1;2603:6;2590:9;:20::i;:::-;2552:58;;;;2631:18;2624:25;;;;;;;;:3;:25;;;;;;;;;2620:71;;2673:3;2678:1;2665:15;;;;;;;;;;;2620:71;2709:18;2729:17;2738:7;2729:8;:17::i;:::-;2701:46;;;;;;2448:306;;;;;;:::o;4576:227:5:-;4623:4;4640:13;4655:20;4679:41;4695:4;4687:21;;;4710:9;4679:7;:41::i;:::-;4639:81;;;;4745:18;4738:25;;;;;;;;:3;:25;;;;;;;;;4730:34;;;;;;4781:15;4774:22;;;;4576:227;:::o;35659:564:6:-;35737:4;35743;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;35759:10;35772:16;:14;:16::i;:::-;35759:29;;35816:14;35811:20;;;;;;;;35802:5;:29;35798:257;;35973:67;35984:5;35978:12;;;;;;;;35992:47;35973:4;:67::i;:::-;36042:1;35965:79;;;;;;;;;;35798:257;36163:53;36180:10;36192;36204:11;36163:16;:53::i;:::-;36156:60;;;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;35659:564;;;:::o;59355:1706::-;59422:4;59478:21;59561:5;;;;;;;;;;;59547:19;;:10;:19;;;59543:122;;59589:65;59594:18;59614:39;59589:4;:65::i;:::-;59582:72;;;;;59543:122;59788:16;:14;:16::i;:::-;59766:18;;:38;59762:145;;59827:69;59832:22;59856:39;59827:4;:69::i;:::-;59820:76;;;;;59762:145;60010:12;59993:14;:12;:14::i;:::-;:29;59989:150;;;60045:83;60050:29;60081:46;60045:4;:83::i;:::-;60038:90;;;;;59989:150;60230:13;;60215:12;:28;60211:127;;;60266:61;60271:15;60288:38;60266:4;:61::i;:::-;60259:68;;;;;60211:127;60500:12;60484:13;;:28;60465:47;;60638:13;;60618:16;:33;;60610:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;60779:16;60763:13;:32;;;;60912:34;60926:5;;;;;;;;;;;60933:12;60912:13;:34::i;:::-;60962:54;60978:5;;;;;;;;;;;60985:12;60999:16;60962:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;61039:14;61034:20;;;;;;;;61027:27;;;59355:1706;;;;:::o;25350:529::-;25434:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;25450:10;25463:16;:14;:16::i;:::-;25450:29;;25507:14;25502:20;;;;;;;;25493:5;:29;25489:246;;25663:61;25674:5;25668:12;;;;;;;;25682:41;25663:4;:61::i;:::-;25656:68;;;;;25489:246;25832:40;25844:10;25856:1;25859:12;25832:11;:40::i;:::-;25825:47;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;25350:529;;;:::o;11464:1238::-;11541:9;11552:4;11635:17;11662:24;11696:11;11766:37;11806:14;:23;11821:7;11806:23;;;;;;;;;;;;;;;11766:63;;12058:1;12030:14;:24;;;:29;12026:90;;;12083:18;12103:1;12075:30;;;;;;;;;;;;;12026:90;12338:46;12346:14;:24;;;12372:11;;12338:7;:46::i;:::-;12305:79;;;;;;;;12409:18;12398:29;;;;;;;;:7;:29;;;;;;;;;12394:79;;12451:7;12460:1;12443:19;;;;;;;;;;;;;12394:79;12503:58;12511:19;12532:14;:28;;;12503:7;:58::i;:::-;12483:78;;;;;;;;12586:18;12575:29;;;;;;;;:7;:29;;;;;;;;;12571:79;;12628:7;12637:1;12620:19;;;;;;;;;;;;;12571:79;12668:18;12688:6;12660:35;;;;;;;;11464:1238;;;;:::o;9126:91::-;9175:4;9198:12;9191:19;;9126:91;:::o;62371:1271::-;62465:4;62565:38;62665:5;;;;;;;;;;;62651:19;;:10;:19;;;62647:130;;62693:73;62698:18;62718:47;62693:4;:73::i;:::-;62686:80;;;;;62647:130;62900:16;:14;:16::i;:::-;62878:18;;:38;62874:153;;62939:77;62944:22;62968:47;62939:4;:77::i;:::-;62932:84;;;;;62874:153;63118:17;;;;;;;;;;;63095:40;;63235:20;:40;;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;63235:42:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;63235:42:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;63235:42:6;;;;;;;;;;;;;;;;63227:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63404:20;63384:17;;:40;;;;;;;;;;;;;;;;;;63527:70;63554:20;63576;63527:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;63620:14;63615:20;;;;;;;;63608:27;;;62371:1271;;;;:::o;1303:230:8:-;1359:9;1370:4;1395:1;1390;:6;1386:141;;1420:18;1444:1;1440;:5;1412:34;;;;;;1386:141;1485:27;1514:1;1477:39;;;;;;;1303:230;;;;;;:::o;1994:346:16:-;2063:9;2074:10;;:::i;:::-;2097:14;2113:19;2136:27;2144:1;:10;;;2156:6;2136:7;:27::i;:::-;2096:67;;;;2185:18;2177:26;;;;;;;;:4;:26;;;;;;;;;2173:90;;2227:4;2233:18;;;;;;;;2248:1;2233:18;;;2219:33;;;;;;;;;;;2173:90;2281:18;2301:31;;;;;;;;2316:14;2301:31;;;2273:60;;;;;;;;;1994:346;;;;;;:::o;7500:183:15:-;7585:4;7606:43;7619:3;7614:9;;;;;;;;7630:4;7625:10;;;;;;;;7637:11;7606:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7672:3;7667:9;;;;;;;;7660:16;;7500:183;;;;;:::o;1613:250:8:-;1669:9;1680:4;1696:6;1709:1;1705;:5;1696:14;;1730:1;1725;:6;1721:136;;1755:18;1775:1;1747:30;;;;;;;1721:136;1816:26;1844:1;1808:38;;;;;;;;1613:250;;;;;;:::o;2894:321:16:-;2991:9;3002:4;3019:13;3034:18;;:::i;:::-;3056:20;3066:1;3069:6;3056:9;:20::i;:::-;3018:58;;;;3097:18;3090:25;;;;;;;;:3;:25;;;;;;;;;3086:71;;3139:3;3144:1;3131:15;;;;;;;;;;;3086:71;3174:34;3182:17;3191:7;3182:8;:17::i;:::-;3201:6;3174:7;:34::i;:::-;3167:41;;;;;;2894:321;;;;;;;:::o;41928:979:6:-;42062:4;42068;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;42084:10;42097:16;:14;:16::i;:::-;42084:29;;42141:14;42136:20;;;;;;;;42127:5;:29;42123:266;;42303:71;42314:5;42308:12;;;;;;;;42322:51;42303:4;:71::i;:::-;42376:1;42295:83;;;;;;;;;;42123:266;42407:16;:31;;;:33;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;42407:33:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;42407:33:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;42407:33:6;;;;;;;;;;;;;;;;42399:41;;42468:14;42463:20;;;;;;;;42454:5;:29;42450:270;;42630:75;42641:5;42635:12;;;;;;;;42649:55;42630:4;:75::i;:::-;42707:1;42622:87;;;;;;;;;;42450:270;42827:73;42848:10;42860:8;42870:11;42883:16;42827:20;:73::i;:::-;42820:80;;;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;41928:979;;;;;;:::o;48427:2093::-;48545:4;48601:12;48616:11;;;;;;;;;;;:24;;;48649:4;48656:11;48669:10;48681:8;48691:11;48616:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48616:87:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48616:87:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;48616:87:6;;;;;;;;;;;;;;;;48601:102;;48728:1;48717:7;:12;48713:149;;48752:99;48763:27;48792:49;48843:7;48752:10;:99::i;:::-;48745:106;;;;;48713:149;48932:10;48920:22;;:8;:22;;;48916:144;;;48965:84;48970:26;48998:50;48965:4;:84::i;:::-;48958:91;;;;;48916:144;49070:17;49097:22;49129:24;49465:45;49473:13;:23;49487:8;49473:23;;;;;;;;;;;;;;;;49498:11;49465:7;:45::i;:::-;49434:76;;;;;;;;49535:18;49524:29;;;;;;;;:7;:29;;;;;;;;;49520:164;;49576:97;49587:16;49605:52;49664:7;49659:13;;;;;;;;49576:10;:97::i;:::-;49569:104;;;;;;;;49520:164;49727:47;49735:13;:25;49749:10;49735:25;;;;;;;;;;;;;;;;49762:11;49727:7;:47::i;:::-;49694:80;;;;;;;;49799:18;49788:29;;;;;;;;:7;:29;;;;;;;;;49784:164;;49840:97;49851:16;49869:52;49928:7;49923:13;;;;;;;;49840:10;:97::i;:::-;49833:104;;;;;;;;49784:164;50170:17;50144:13;:23;50158:8;50144:23;;;;;;;;;;;;;;;:43;;;;50225:19;50197:13;:25;50211:10;50197:25;;;;;;;;;;;;;;;:47;;;;50315:10;50296:43;;50305:8;50296:43;;;50327:11;50296:43;;;;;;;;;;;;;;;;;;50389:11;;;;;;;;;;;:23;;;50421:4;50428:11;50441:10;50453:8;50463:11;50389:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50389:86:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50389:86:6;;;;50498:14;50493:20;;;;;;;;50486:27;;;;;;48427:2093;;;;;;;:::o;31513:516::-;31587:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;31603:10;31616:16;:14;:16::i;:::-;31603:29;;31660:14;31655:20;;;;;;;;31646:5;:29;31642:246;;31816:61;31827:5;31821:12;;;;;;;;31835:41;31816:4;:61::i;:::-;31809:68;;;;;31642:246;31985:37;31997:10;32009:12;31985:11;:37::i;:::-;31978:44;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;31513:516;;;:::o;24459:519::-;24533:4;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;24549:10;24562:16;:14;:16::i;:::-;24549:29;;24606:14;24601:20;;;;;;;;24592:5;:29;24588:246;;24762:61;24773:5;24767:12;;;;;;;;24781:41;24762:4;:61::i;:::-;24755:68;;;;;24588:246;24931:40;24943:10;24955:12;24969:1;24931:11;:40::i;:::-;24924:47;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;24459:519;;;:::o;36548:586::-;36650:4;36656;65339:11;;;;;;;;;;;65331:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;65389:5;65375:11;;:19;;;;;;;;;;;;;;;;;;36672:10;36685:16;:14;:16::i;:::-;36672:29;;36729:14;36724:20;;;;;;;;36715:5;:29;36711:257;;36886:67;36897:5;36891:12;;;;;;;;36905:47;36886:4;:67::i;:::-;36955:1;36878:79;;;;;;;;;;36711:257;37076:51;37093:10;37105:8;37115:11;37076:16;:51::i;:::-;37069:58;;;;;65404:1;65429:4;65415:11;;:18;;;;;;;;;;;;;;;;;;36548:586;;;;;:::o;54674:951::-;54755:4;54822:5;;;;;;;;;;;54808:19;;:10;:19;;;54804:125;;54850:68;54855:18;54875:42;54850:4;:68::i;:::-;54843:75;;;;54804:125;55033:16;:14;:16::i;:::-;55011:18;;:38;55007:148;;55072:72;55077:22;55101:42;55072:4;:72::i;:::-;55065:79;;;;55007:148;805:4:7;55224:24:6;:51;55220:155;;;55298:66;55303:15;55320:43;55298:4;:66::i;:::-;55291:73;;;;55220:155;55385:29;55417:21;;55385:53;;55472:24;55448:21;:48;;;;55512:68;55529:24;55555;55512:68;;;;;;;;;;;;;;;;;;;;;;;;55603:14;55598:20;;;;;;;;55591:27;;;54674:951;;;;:::o;5078:257:5:-;5153:5;5217:4;5203:18;;:10;:18;;;5195:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5272:6;5259:9;:19;5251:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5314:14;5307:21;;5078:257;;;;:::o;5568:240::-;5635:4;5698;5684:18;;:10;:18;;;5676:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5753:6;5740:9;:19;5732:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5795:6;5788:13;;5568:240;;;;:::o;4440:330:16:-;4528:9;4539:4;4556:13;4571:19;;:::i;:::-;4594:31;4609:6;4617:7;4594:14;:31::i;:::-;4555:70;;;;4646:18;4639:25;;;;;;;;:3;:25;;;;;;;;;4635:71;;4688:3;4693:1;4680:15;;;;;;;;;;;4635:71;4724:18;4744;4753:8;4744;:18::i;:::-;4716:47;;;;;;4440:330;;;;;;:::o;1927:263:8:-;1998:9;2009:4;2026:14;2042:8;2054:13;2062:1;2065;2054:7;:13::i;:::-;2025:42;;;;2090:18;2082:26;;;;;;;;:4;:26;;;;;;;;;2078:73;;2132:4;2138:1;2124:16;;;;;;;;;;;2078:73;2168:15;2176:3;2181:1;2168:7;:15::i;:::-;2161:22;;;;;;1927:263;;;;;;;:::o;788:503:16:-;849:9;860:10;;:::i;:::-;883:14;899:20;923:22;931:3;447:4;923:7;:22::i;:::-;882:63;;;;967:18;959:26;;;;;;;;:4;:26;;;;;;;;;955:90;;1009:4;1015:18;;;;;;;;1030:1;1015:18;;;1001:33;;;;;;;;;;;955:90;1056:14;1072:13;1089:31;1097:15;1114:5;1089:7;:31::i;:::-;1055:65;;;;1142:18;1134:26;;;;;;;;:4;:26;;;;;;;;;1130:90;;1184:4;1190:18;;;;;;;;1205:1;1190:18;;;1176:33;;;;;;;;;;;;;1130:90;1238:18;1258:25;;;;;;;;1273:8;1258:25;;;1230:54;;;;;;;;;;;788:503;;;;;;:::o;7140:210::-;7197:4;447;7320:3;:12;;;:23;;;;;;7313:30;;7140:210;;;:::o;37819:3592:6:-;37914:4;37920;37982:12;37997:11;;;;;;;;;;;:30;;;38036:4;38043:5;38050:8;38060:11;37997:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37997:75:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37997:75:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37997:75:6;;;;;;;;;;;;;;;;37982:90;;38097:1;38086:7;:12;38082:151;;38122:96;38133:27;38162:46;38210:7;38122:10;:96::i;:::-;38220:1;38114:108;;;;;;;;;;38082:151;38340:16;:14;:16::i;:::-;38318:18;;:38;38314:151;;38380:70;38385:22;38409:40;38380:4;:70::i;:::-;38452:1;38372:82;;;;;;;;;;38314:151;38475:32;;:::i;:::-;38618:14;:24;38633:8;38618:24;;;;;;;;;;;;;;;:38;;;38597:4;:18;;:59;;;;;38784:37;38812:8;38784:27;:37::i;:::-;38747:4;:12;;38761:4;:19;;38746:75;;;;;;;;;;;;;;;;;;;;;;;;;;38851:18;38835:34;;;;;;;;:4;:12;;;:34;;;;;;;;;38831:190;;38893:113;38904:16;38922:63;38992:4;:12;;;38987:18;;;;;;;;38893:10;:113::i;:::-;39008:1;38885:125;;;;;;;;;;;38831:190;39120:2;39100:11;:23;39096:153;;;39158:4;:19;;;39139:4;:16;;:38;;;;;39096:153;;;39227:11;39208:4;:16;;:30;;;;;39096:153;39314:40;39330:5;39337:4;:16;;;39314:15;:40::i;:::-;39303:4;:8;;:51;;;;;;;;;;;;;;;;;;;;;;;39380:14;39368:26;;;;;;;;:4;:8;;;:26;;;;;;;;;39364:134;;39418:65;39423:4;:8;;;39433:49;39418:4;:65::i;:::-;39485:1;39410:77;;;;;;;;;;;39364:134;40083:37;40096:5;40103:4;:16;;;40083:12;:37::i;:::-;40058:4;:22;;:62;;;;;40415:52;40423:4;:19;;;40444:4;:22;;;40415:7;:52::i;:::-;40375:4;:12;;40389:4;:22;;40374:93;;;;;;;;;;;;;;;;;;;;;;;;;;40501:18;40485:34;;;;;;;;:4;:12;;;:34;;;;;;;;;40477:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40632:45;40640:12;;40654:4;:22;;;40632:7;:45::i;:::-;40594:4;:12;;40608:4;:20;;40593:84;;;;;;;;;;;;;;;;;;;;;;;;;;40711:18;40695:34;;;;;;;;:4;:12;;;:34;;;;;;;;;40687:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40900:4;:22;;;40863:14;:24;40878:8;40863:24;;;;;;;;;;;;;;;:34;;:59;;;;40973:11;;40932:14;:24;40947:8;40932:24;;;;;;;;;;;;;;;:38;;:52;;;;41009:4;:20;;;40994:12;:35;;;;41087:98;41099:5;41106:8;41116:4;:22;;;41140:4;:22;;;41164:4;:20;;;41087:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41235:11;;;;;;;;;;;:29;;;41273:4;41280:5;41287:8;41297:4;:22;;;41321:4;:18;;;41235:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41235:105:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;41235:105:6;;;;41364:14;41359:20;;;;;;;;41381:4;:22;;;41351:53;;;;;;37819:3592;;;;;;;:::o;5814:170:5:-;5958:2;:11;;:19;5970:6;5958:19;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5958:19:5;5814:170;;:::o;26748:4504:6:-;26855:4;26897:1;26879:14;:19;:42;;;;26920:1;26902:14;:19;26879:42;26871:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26989:27;;:::i;:::-;27130:28;:26;:28::i;:::-;27087:4;:12;;27101:4;:25;;27086:72;;;;;;;;;;;;;;;;;;;;;;;;;;27188:18;27172:34;;;;;;;;:4;:12;;;:34;;;;;;;;;27168:166;;27229:94;27240:16;27258:44;27309:4;:12;;;27304:18;;;;;;;;27229:10;:94::i;:::-;27222:101;;;;;27168:166;27402:1;27385:14;:18;27381:1265;;;27675:14;27655:4;:17;;:34;;;;;27740:77;27758:42;;;;;;;;27773:4;:25;;;27758:42;;;27802:14;27740:17;:77::i;:::-;27705:4;:12;;27719:4;:17;;27704:113;;;;;;;;;;;;;;;;;;;;;;;;;;27851:18;27835:34;;;;;;;;:4;:12;;;:34;;;;;;;;;27831:183;;27896:103;27907:16;27925:53;27985:4;:12;;;27980:18;;;;;;;;27896:10;:103::i;:::-;27889:110;;;;;27831:183;27381:1265;;;28308:82;28331:14;28347:42;;;;;;;;28362:4;:25;;;28347:42;;;28308:22;:82::i;:::-;28273:4;:12;;28287:4;:17;;28272:118;;;;;;;;;;;;;;;;;;;;;;;;;;28424:18;28408:34;;;;;;;;:4;:12;;;:34;;;;;;;;;28404:183;;28469:103;28480:16;28498:53;28558:4;:12;;;28553:18;;;;;;;;28469:10;:103::i;:::-;28462:110;;;;;28404:183;28621:14;28601:4;:17;;:34;;;;;27381:1265;28697:12;28712:11;;;;;;;;;;;:25;;;28746:4;28753:8;28763:4;:17;;;28712:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28712:69:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28712:69:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;28712:69:6;;;;;;;;;;;;;;;;28697:84;;28806:1;28795:7;:12;28791:140;;28830:90;28841:27;28870:40;28912:7;28830:10;:90::i;:::-;28823:97;;;;;;28791:140;29038:16;:14;:16::i;:::-;29016:18;;:38;29012:140;;29077:64;29082:22;29106:34;29077:4;:64::i;:::-;29070:71;;;;;;29012:140;29440:39;29448:11;;29461:4;:17;;;29440:7;:39::i;:::-;29403:4;:12;;29417:4;:19;;29402:77;;;;;;;;;;;;;;;;;;;;;;;;;;29509:18;29493:34;;;;;;;;:4;:12;;;:34;;;;;;;;;29489:176;;29550:104;29561:16;29579:54;29640:4;:12;;;29635:18;;;;;;;;29550:10;:104::i;:::-;29543:111;;;;;;29489:176;29715:51;29723:13;:23;29737:8;29723:23;;;;;;;;;;;;;;;;29748:4;:17;;;29715:7;:51::i;:::-;29676:4;:12;;29690:4;:21;;29675:91;;;;;;;;;;;;;;;;;;;;;;;;;;29796:18;29780:34;;;;;;;;:4;:12;;;:34;;;;;;;;;29776:179;;29837:107;29848:16;29866:57;29930:4;:12;;;29925:18;;;;;;;;29837:10;:107::i;:::-;29830:114;;;;;;29776:179;30050:4;:17;;;30033:14;:12;:14::i;:::-;:34;30029:153;;;30090:81;30095:29;30126:44;30090:4;:81::i;:::-;30083:88;;;;;;30029:153;30666:42;30680:8;30690:4;:17;;;30666:13;:42::i;:::-;30798:4;:19;;;30784:11;:33;;;;30853:4;:21;;;30827:13;:23;30841:8;30827:23;;;;;;;;;;;;;;;:47;;;;30976:4;30949:52;;30958:8;30949:52;;;30983:4;:17;;;30949:52;;;;;;;;;;;;;;;;;;31016:54;31023:8;31033:4;:17;;;31052:4;:17;;;31016:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31120:11;;;;;;;;;;;:24;;;31153:4;31160:8;31170:4;:17;;;31189:4;:17;;;31120:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;31120:87:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;31120:87:6;;;;31230:14;31225:20;;;;;;;;31218:27;;;;26748:4504;;;;;;:::o;543:331:8:-;599:9;610:4;635:1;630;:6;626:67;;;660:18;680:1;652:30;;;;;;;;;626:67;703:6;716:1;712;:5;703:14;;741:1;736;732;:5;;;;;;:10;728:140;;766:26;794:1;758:38;;;;;;;;;;728:140;835:18;855:1;827:30;;;;;543:331;;;;;;:::o;964:209::-;1020:9;1031:4;1056:1;1051;:6;1047:75;;;1081:26;1109:1;1073:38;;;;;;;;;1047:75;1140:18;1164:1;1160;:5;;;;;;1132:34;;;;964:209;;;;;;:::o;43508:3514:6:-;43646:4;43652;43712:12;43727:11;;;;;;;;;;;:34;;;43770:4;43785:16;43804:10;43816:8;43826:11;43727:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;43727:111:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;43727:111:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;43727:111:6;;;;;;;;;;;;;;;;43712:126;;43863:1;43852:7;:12;43848:148;;43888:93;43899:27;43928:43;43973:7;43888:10;:93::i;:::-;43983:1;43880:105;;;;;;;;;;43848:148;44103:16;:14;:16::i;:::-;44081:18;;:38;44077:148;;44143:67;44148:22;44172:37;44143:4;:67::i;:::-;44212:1;44135:79;;;;;;;;;;44077:148;44368:16;:14;:16::i;:::-;44327;:35;;;:37;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44327:37:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44327:37:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;44327:37:6;;;;;;;;;;;;;;;;:57;44323:178;;44408:78;44413:22;44437:48;44408:4;:78::i;:::-;44488:1;44400:90;;;;;;;;;;44323:178;44571:10;44559:22;;:8;:22;;;44555:143;;;44605:78;44610:26;44638:44;44605:4;:78::i;:::-;44685:1;44597:90;;;;;;;;;;44555:143;44765:1;44750:11;:16;44746:145;;;44790:86;44795:36;44833:42;44790:4;:86::i;:::-;44878:1;44782:98;;;;;;;;;;44746:145;44964:2;44944:11;:23;44940:156;;;44991:90;44996:36;45034:46;44991:4;:90::i;:::-;45083:1;44983:102;;;;;;;;;;44940:156;45148:21;45171:22;45197:51;45214:10;45226:8;45236:11;45197:16;:51::i;:::-;45147:101;;;;45287:14;45282:20;;;;;;;;45262:16;:40;45258:161;;45326:78;45337:16;45331:23;;;;;;;;45356:47;45326:4;:78::i;:::-;45406:1;45318:90;;;;;;;;;;;;45258:161;45626:21;45649:16;45669:11;;;;;;;;;;;:41;;;45719:4;45734:16;45753:17;45669:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45669:102:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;45669:102:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;45669:102:6;;;;;;;;;;;;;;;;;;;;;;;;;45625:146;;;;45814:14;45809:20;;;;;;;;45789:16;:40;45781:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46016:11;45976:16;:26;;;46003:8;45976:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;45976:36:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;45976:36:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;45976:36:6;;;;;;;;;;;;;;;;:51;;45968:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46182:15;46248:4;46211:42;;46219:16;46211:42;;;46207:250;;;46282:63;46304:4;46311:10;46323:8;46333:11;46282:13;:63::i;:::-;46269:76;;46207:250;;;46389:16;:22;;;46412:10;46424:8;46434:11;46389:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46389:57:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46389:57:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;46389:57:6;;;;;;;;;;;;;;;;46376:70;;46207:250;46579:14;46574:20;;;;;;;;46560:10;:34;46552:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46681:96;46697:10;46709:8;46719:17;46746:16;46765:11;46681:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46827:11;;;;;;;;;;;:33;;;46869:4;46884:16;46903:10;46915:8;46925:17;46944:11;46827:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46827:129:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46827:129:6;;;;46980:14;46975:20;;;;;;;;46997:17;46967:48;;;;;;;;;;43508:3514;;;;;;;;:::o;32442:2971::-;32526:4;32583:12;32598:11;;;;;;;;;;;:25;;;32632:4;32639:8;32649:12;32598:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;32598:64:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32598:64:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;32598:64:6;;;;;;;;;;;;;;;;32583:79;;32687:1;32676:7;:12;32672:140;;32711:90;32722:27;32751:40;32793:7;32711:10;:90::i;:::-;32704:97;;;;;32672:140;32919:16;:14;:16::i;:::-;32897:18;;:38;32893:140;;32958:64;32963:22;32987:34;32958:4;:64::i;:::-;32951:71;;;;;32893:140;33139:12;33122:14;:12;:14::i;:::-;:29;33118:141;;;33174:74;33179:29;33210:37;33174:4;:74::i;:::-;33167:81;;;;;33118:141;33269:27;;:::i;:::-;33577:37;33605:8;33577:27;:37::i;:::-;33540:4;:12;;33554:4;:19;;33539:75;;;;;;;;;;;;;;;;;;;;;;;;;;33644:18;33628:34;;;;;;;;:4;:12;;;:34;;;;;;;;;33624:179;;33685:107;33696:16;33714:57;33778:4;:12;;;33773:18;;;;;;;;33685:10;:107::i;:::-;33678:114;;;;;;33624:179;33854:42;33862:4;:19;;;33883:12;33854:7;:42::i;:::-;33814:4;:12;;33828:4;:22;;33813:83;;;;;;;;;;;;;;;;;;;;;;;;;;33926:18;33910:34;;;;;;;;:4;:12;;;:34;;;;;;;;;33906:186;;33967:114;33978:16;33996:64;34067:4;:12;;;34062:18;;;;;;;;33967:10;:114::i;:::-;33960:121;;;;;;33906:186;34141:35;34149:12;;34163;34141:7;:35::i;:::-;34103:4;:12;;34117:4;:20;;34102:74;;;;;;;;;;;;;;;;;;;;;;;;;;34206:18;34190:34;;;;;;;;:4;:12;;;:34;;;;;;;;;34186:177;;34247:105;34258:16;34276:55;34338:4;:12;;;34333:18;;;;;;;;34247:10;:105::i;:::-;34240:112;;;;;;34186:177;34843:37;34857:8;34867:12;34843:13;:37::i;:::-;34997:4;:22;;;34960:14;:24;34975:8;34960:24;;;;;;;;;;;;;;;:34;;:59;;;;35070:11;;35029:14;:24;35044:8;35029:24;;;;;;;;;;;;;;;:38;;:52;;;;35106:4;:20;;;35091:12;:35;;;;35179:76;35186:8;35196:12;35210:4;:22;;;35234:4;:20;;;35179:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35305:11;;;;;;;;;;;:24;;;35338:4;35345:8;35355:12;35305:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35305:63:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;35305:63:6;;;;35391:14;35386:20;;;;;;;;35379:27;;;;32442:2971;;;;;:::o;3729:605:16:-;3809:9;3820:10;;:::i;:::-;4117:14;4133;4151:25;447:4;4169:6;4151:7;:25::i;:::-;4116:60;;;;4198:18;4190:26;;;;;;;;:4;:26;;;;;;;;;4186:90;;4240:4;4246:18;;;;;;;;4261:1;4246:18;;;4232:33;;;;;;;;;;;4186:90;4292:35;4299:9;4310:7;:16;;;4292:6;:35::i;:::-;4285:42;;;;;;3729:605;;;;;;:::o;151:6534:5:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.12;\n\nimport \"./CToken.sol\";\n\n/**\n * @title Compound's CEther Contract\n * @notice CToken which wraps Ether\n * @author Compound\n */\ncontract CEther is CToken {\n    /**\n     * @notice Construct a new CEther money market\n     * @param comptroller_ The address of the Comptroller\n     * @param interestRateModel_ The address of the interest rate model\n     * @param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\n     * @param name_ ERC-20 name of this token\n     * @param symbol_ ERC-20 symbol of this token\n     * @param decimals_ ERC-20 decimal precision of this token\n     * @param admin_ Address of the administrator of this token\n     */\n    constructor(ComptrollerInterface comptroller_,\n                InterestRateModel interestRateModel_,\n                uint initialExchangeRateMantissa_,\n                string memory name_,\n                string memory symbol_,\n                uint8 decimals_,\n                address payable admin_) public {\n        // Creator of the contract is admin during initialization\n        admin = msg.sender;\n\n        initialize(comptroller_, interestRateModel_, initialExchangeRateMantissa_, name_, symbol_, decimals_);\n\n        // Set the proper admin now that initialization is done\n        admin = admin_;\n    }\n\n\n    /*** User Interface ***/\n\n    /**\n     * @notice Sender supplies assets into the market and receives cTokens in exchange\n     * @dev Reverts upon any failure\n     */\n    function mint() external payable {\n        (uint err,) = mintInternal(msg.value);\n        requireNoError(err, \"mint failed\");\n    }\n\n    /**\n     * @notice Sender redeems cTokens in exchange for the underlying asset\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\n     * @param redeemTokens The number of cTokens to redeem into underlying\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function redeem(uint redeemTokens) external returns (uint) {\n        return redeemInternal(redeemTokens);\n    }\n\n    /**\n     * @notice Sender redeems cTokens in exchange for a specified amount of underlying asset\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\n     * @param redeemAmount The amount of underlying to redeem\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function redeemUnderlying(uint redeemAmount) external returns (uint) {\n        return redeemUnderlyingInternal(redeemAmount);\n    }\n\n    /**\n      * @notice Sender borrows assets from the protocol to their own address\n      * @param borrowAmount The amount of the underlying asset to borrow\n      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n      */\n    function borrow(uint borrowAmount) external returns (uint) {\n        return borrowInternal(borrowAmount);\n    }\n\n    /**\n     * @notice Sender repays their own borrow\n     * @dev Reverts upon any failure\n     */\n    function repayBorrow() external payable {\n        (uint err,) = repayBorrowInternal(msg.value);\n        requireNoError(err, \"repayBorrow failed\");\n    }\n\n    /**\n     * @notice Sender repays a borrow belonging to borrower\n     * @dev Reverts upon any failure\n     * @param borrower the account with the debt being payed off\n     */\n    function repayBorrowBehalf(address borrower) external payable {\n        (uint err,) = repayBorrowBehalfInternal(borrower, msg.value);\n        requireNoError(err, \"repayBorrowBehalf failed\");\n    }\n\n    /**\n     * @notice The sender liquidates the borrowers collateral.\n     *  The collateral seized is transferred to the liquidator.\n     * @dev Reverts upon any failure\n     * @param borrower The borrower of this cToken to be liquidated\n     * @param cTokenCollateral The market in which to seize collateral from the borrower\n     */\n    function liquidateBorrow(address borrower, CToken cTokenCollateral) external payable {\n        (uint err,) = liquidateBorrowInternal(borrower, msg.value, cTokenCollateral);\n        requireNoError(err, \"liquidateBorrow failed\");\n    }\n\n    /**\n     * @notice Send Ether to CEther to mint\n     */\n    function () external payable {\n        (uint err,) = mintInternal(msg.value);\n        requireNoError(err, \"mint failed\");\n    }\n\n    /*** Safe Token ***/\n\n    /**\n     * @notice Gets balance of this contract in terms of Ether, before this message\n     * @dev This excludes the value of the current message, if any\n     * @return The quantity of Ether owned by this contract\n     */\n    function getCashPrior() internal view returns (uint) {\n        (MathError err, uint startingBalance) = subUInt(address(this).balance, msg.value);\n        require(err == MathError.NO_ERROR);\n        return startingBalance;\n    }\n\n    /**\n     * @notice Checks whether the requested transfer matches the `msg`\n     * @dev Does NOT do a transfer\n     * @param from Address sending the Ether\n     * @param amount Amount of Ether being sent\n     * @return Whether or not the transfer checks out\n     */\n    function checkTransferIn(address from, uint amount) internal view returns (Error) {\n        // Sanity checks\n        require(msg.sender == from, \"sender mismatch\");\n        require(msg.value == amount, \"value mismatch\");\n        return Error.NO_ERROR;\n    }\n\n    /**\n     * @notice Perform the actual transfer in, which is a no-op\n     * @param from Address sending the Ether\n     * @param amount Amount of Ether being sent\n     * @return The actual amount of Ether transferred\n     */\n    function doTransferIn(address from, uint amount) internal returns (uint) {\n        // Sanity checks\n        require(msg.sender == from, \"sender mismatch\");\n        require(msg.value == amount, \"value mismatch\");\n        return amount;\n    }\n\n    function doTransferOut(address payable to, uint amount) internal {\n        /* Send the Ether, with minimal gas and revert on failure */\n        to.transfer(amount);\n    }\n\n    function requireNoError(uint errCode, string memory message) internal pure {\n        if (errCode == uint(Error.NO_ERROR)) {\n            return;\n        }\n\n        bytes memory fullMessage = new bytes(bytes(message).length + 5);\n        uint i;\n\n        for (i = 0; i < bytes(message).length; i++) {\n            fullMessage[i] = bytes(message)[i];\n        }\n\n        fullMessage[i+0] = byte(uint8(32));\n        fullMessage[i+1] = byte(uint8(40));\n        fullMessage[i+2] = byte(uint8(48 + ( errCode / 10 )));\n        fullMessage[i+3] = byte(uint8(48 + ( errCode % 10 )));\n        fullMessage[i+4] = byte(uint8(41));\n\n        require(errCode == uint(Error.NO_ERROR), string(fullMessage));\n    }\n}\n",
  "sourcePath": "/home/belvis/ethereum/private-Ethereum-TestNet/contracts/compound/CEther.sol",
  "ast": {
    "absolutePath": "/home/belvis/ethereum/private-Ethereum-TestNet/contracts/compound/CEther.sol",
    "exportedSymbols": {
      "CEther": [
        1863
      ]
    },
    "id": 1864,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1460,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/home/belvis/ethereum/private-Ethereum-TestNet/contracts/compound/CToken.sol",
        "file": "./CToken.sol",
        "id": 1461,
        "nodeType": "ImportDirective",
        "scope": 1864,
        "sourceUnit": 5477,
        "src": "26:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1462,
              "name": "CToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5476,
              "src": "170:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CToken_$5476",
                "typeString": "contract CToken"
              }
            },
            "id": 1463,
            "nodeType": "InheritanceSpecifier",
            "src": "170:6:5"
          }
        ],
        "contractDependencies": [
          5476,
          5536,
          5837,
          6122,
          11354,
          11961
        ],
        "contractKind": "contract",
        "documentation": "@title Compound's CEther Contract\n@notice CToken which wraps Ether\n@author Compound",
        "fullyImplemented": true,
        "id": 1863,
        "linearizedBaseContracts": [
          1863,
          5476,
          11354,
          11961,
          6122,
          5837,
          5536
        ],
        "name": "CEther",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1498,
              "nodeType": "Block",
              "src": "996:302:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1480,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5496,
                      "src": "1072:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1481,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13762,
                        "src": "1080:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1080:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1072:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1484,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1486,
                        "name": "comptroller_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
                        "src": "1112:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComptrollerInterface_$10905",
                          "typeString": "contract ComptrollerInterface"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1487,
                        "name": "interestRateModel_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "1126:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InterestRateModel_$11993",
                          "typeString": "contract InterestRateModel"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1488,
                        "name": "initialExchangeRateMantissa_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "1146:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1489,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "1176:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1490,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "1183:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1491,
                        "name": "decimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "1192:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ComptrollerInterface_$10905",
                          "typeString": "contract ComptrollerInterface"
                        },
                        {
                          "typeIdentifier": "t_contract$_InterestRateModel_$11993",
                          "typeString": "contract InterestRateModel"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1485,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "1101:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ComptrollerInterface_$10905_$_t_contract$_InterestRateModel_$11993_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (contract ComptrollerInterface,contract InterestRateModel,uint256,string memory,string memory,uint8)"
                      }
                    },
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:101:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1493,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:101:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1494,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5496,
                      "src": "1277:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1495,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1477,
                      "src": "1285:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1277:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1497,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:14:5"
                }
              ]
            },
            "documentation": "@notice Construct a new CEther money market\n@param comptroller_ The address of the Comptroller\n@param interestRateModel_ The address of the interest rate model\n@param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\n@param name_ ERC-20 name of this token\n@param symbol_ ERC-20 symbol of this token\n@param decimals_ ERC-20 decimal precision of this token\n@param admin_ Address of the administrator of this token",
            "id": 1499,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1465,
                  "name": "comptroller_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "700:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ComptrollerInterface_$10905",
                    "typeString": "contract ComptrollerInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1464,
                    "name": "ComptrollerInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10905,
                    "src": "700:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$10905",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1467,
                  "name": "interestRateModel_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "751:36:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InterestRateModel_$11993",
                    "typeString": "contract InterestRateModel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1466,
                    "name": "InterestRateModel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11993,
                    "src": "751:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$11993",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1469,
                  "name": "initialExchangeRateMantissa_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "805:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1468,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1471,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "856:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1473,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "893:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1472,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "893:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1475,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "932:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1474,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1477,
                  "name": "admin_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "965:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "699:289:5"
            },
            "returnParameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:5"
            },
            "scope": 1863,
            "src": "688:610:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1514,
              "nodeType": "Block",
              "src": "1508:98:5",
              "statements": [
                {
                  "assignments": [
                    1503,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1503,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1514,
                      "src": "1519:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1502,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1519:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1508,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1505,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "1545:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1545:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1504,
                      "name": "mintInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3063,
                      "src": "1532:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1518:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1510,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1503,
                        "src": "1580:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1585:13:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 1509,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "1565:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1565:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1513,
                  "nodeType": "ExpressionStatement",
                  "src": "1565:34:5"
                }
              ]
            },
            "documentation": "@notice Sender supplies assets into the market and receives cTokens in exchange\n@dev Reverts upon any failure",
            "id": 1515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1488:2:5"
            },
            "returnParameters": {
              "id": 1501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1508:0:5"
            },
            "scope": 1863,
            "src": "1475:131:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1526,
              "nodeType": "Block",
              "src": "2008:52:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1523,
                        "name": "redeemTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1517,
                        "src": "2040:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1522,
                      "name": "redeemInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3357,
                      "src": "2025:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1521,
                  "id": 1525,
                  "nodeType": "Return",
                  "src": "2018:35:5"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for the underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemTokens The number of cTokens to redeem into underlying\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1517,
                  "name": "redeemTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "1965:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1516,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1964:19:5"
            },
            "returnParameters": {
              "id": 1521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "2002:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1519,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2001:6:5"
            },
            "scope": 1863,
            "src": "1949:111:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1538,
              "nodeType": "Block",
              "src": "2477:62:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1535,
                        "name": "redeemAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "2519:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1534,
                      "name": "redeemUnderlyingInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3395,
                      "src": "2494:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2494:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1533,
                  "id": 1537,
                  "nodeType": "Return",
                  "src": "2487:45:5"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for a specified amount of underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemAmount The amount of underlying to redeem\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1529,
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "2434:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2433:19:5"
            },
            "returnParameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1532,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "2471:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1531,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2470:6:5"
            },
            "scope": 1863,
            "src": "2408:131:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1550,
              "nodeType": "Block",
              "src": "2859:52:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1547,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "2891:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1546,
                      "name": "borrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3754,
                      "src": "2876:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1545,
                  "id": 1549,
                  "nodeType": "Return",
                  "src": "2869:35:5"
                }
              ]
            },
            "documentation": "@notice Sender borrows assets from the protocol to their own address\n@param borrowAmount The amount of the underlying asset to borrow\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1541,
                  "name": "borrowAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "2816:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2816:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2815:19:5"
            },
            "returnParameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "2853:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2852:6:5"
            },
            "scope": 1863,
            "src": "2800:111:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1566,
              "nodeType": "Block",
              "src": "3056:112:5",
              "statements": [
                {
                  "assignments": [
                    1555,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1555,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1566,
                      "src": "3067:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1554,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3067:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1560,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1557,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "3100:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3100:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1556,
                      "name": "repayBorrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4008,
                      "src": "3080:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3080:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3066:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1562,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "3135:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77206661696c6564",
                        "id": 1563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3140:20:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        },
                        "value": "repayBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        }
                      ],
                      "id": 1561,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "3120:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3120:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "3120:41:5"
                }
              ]
            },
            "documentation": "@notice Sender repays their own borrow\n@dev Reverts upon any failure",
            "id": 1567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3036:2:5"
            },
            "returnParameters": {
              "id": 1553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:0:5"
            },
            "scope": 1863,
            "src": "3016:152:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1585,
              "nodeType": "Block",
              "src": "3414:134:5",
              "statements": [
                {
                  "assignments": [
                    1573,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1573,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1585,
                      "src": "3425:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1572,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3425:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1579,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1575,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1569,
                        "src": "3464:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1576,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "3474:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3474:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1574,
                      "name": "repayBorrowBehalfInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4052,
                      "src": "3438:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3438:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3424:60:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1581,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1573,
                        "src": "3509:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77426568616c66206661696c6564",
                        "id": 1582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3514:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        },
                        "value": "repayBorrowBehalf failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        }
                      ],
                      "id": 1580,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "3494:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1584,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:47:5"
                }
              ]
            },
            "documentation": "@notice Sender repays a borrow belonging to borrower\n@dev Reverts upon any failure\n@param borrower the account with the debt being payed off",
            "id": 1586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrowBehalf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1569,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1586,
                  "src": "3379:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3379:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3378:18:5"
            },
            "returnParameters": {
              "id": 1571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3414:0:5"
            },
            "scope": 1863,
            "src": "3352:196:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1607,
              "nodeType": "Block",
              "src": "3976:148:5",
              "statements": [
                {
                  "assignments": [
                    1594,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1594,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1607,
                      "src": "3987:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1593,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3987:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1601,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1596,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1588,
                        "src": "4024:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1597,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "4034:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4034:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1599,
                        "name": "cTokenCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1590,
                        "src": "4045:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CToken_$5476",
                          "typeString": "contract CToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_CToken_$5476",
                          "typeString": "contract CToken"
                        }
                      ],
                      "id": 1595,
                      "name": "liquidateBorrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4395,
                      "src": "4000:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_CTokenInterface_$5837_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,contract CTokenInterface) returns (uint256,uint256)"
                      }
                    },
                    "id": 1600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3986:76:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1603,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1594,
                        "src": "4087:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6971756964617465426f72726f77206661696c6564",
                        "id": 1604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4092:24:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        },
                        "value": "liquidateBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        }
                      ],
                      "id": 1602,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "4072:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1606,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:45:5"
                }
              ]
            },
            "documentation": "@notice The sender liquidates the borrowers collateral.\n The collateral seized is transferred to the liquidator.\n@dev Reverts upon any failure\n@param borrower The borrower of this cToken to be liquidated\n@param cTokenCollateral The market in which to seize collateral from the borrower",
            "id": 1608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1588,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "3916:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3916:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1590,
                  "name": "cTokenCollateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "3934:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$5476",
                    "typeString": "contract CToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1589,
                    "name": "CToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5476,
                    "src": "3934:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CToken_$5476",
                      "typeString": "contract CToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3915:43:5"
            },
            "returnParameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3976:0:5"
            },
            "scope": 1863,
            "src": "3891:233:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1623,
              "nodeType": "Block",
              "src": "4219:98:5",
              "statements": [
                {
                  "assignments": [
                    1612,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1612,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1623,
                      "src": "4230:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1611,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4230:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1617,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1614,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "4256:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4256:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1613,
                      "name": "mintInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3063,
                      "src": "4243:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4243:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4229:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1619,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1612,
                        "src": "4291:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 1620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4296:13:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 1618,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "4276:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4276:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1622,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:34:5"
                }
              ]
            },
            "documentation": "@notice Send Ether to CEther to mint",
            "id": 1624,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4199:2:5"
            },
            "returnParameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4219:0:5"
            },
            "scope": 1863,
            "src": "4190:127:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1651,
              "nodeType": "Block",
              "src": "4629:174:5",
              "statements": [
                {
                  "assignments": [
                    1630,
                    1632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1630,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1651,
                      "src": "4640:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MathError_$5944",
                        "typeString": "enum CarefulMath.MathError"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1629,
                        "name": "MathError",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5944,
                        "src": "4640:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MathError_$5944",
                          "typeString": "enum CarefulMath.MathError"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1632,
                      "name": "startingBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1651,
                      "src": "4655:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1631,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4655:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1641,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1635,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13818,
                              "src": "4695:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CEther_$1863",
                                "typeString": "contract CEther"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CEther_$1863",
                                "typeString": "contract CEther"
                              }
                            ],
                            "id": 1634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4687:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4687:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4687:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1638,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "4710:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4710:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1633,
                      "name": "subUInt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6049,
                      "src": "4679:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_enum$_MathError_$5944_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (enum CarefulMath.MathError,uint256)"
                      }
                    },
                    "id": 1640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4679:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_MathError_$5944_$_t_uint256_$",
                      "typeString": "tuple(enum CarefulMath.MathError,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4639:81:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_MathError_$5944",
                          "typeString": "enum CarefulMath.MathError"
                        },
                        "id": 1646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1643,
                          "name": "err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1630,
                          "src": "4738:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$5944",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1644,
                            "name": "MathError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5944,
                            "src": "4745:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MathError_$5944_$",
                              "typeString": "type(enum CarefulMath.MathError)"
                            }
                          },
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4745:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$5944",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "src": "4738:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13765,
                      "src": "4730:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4730:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1648,
                  "nodeType": "ExpressionStatement",
                  "src": "4730:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1649,
                    "name": "startingBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1632,
                    "src": "4781:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1628,
                  "id": 1650,
                  "nodeType": "Return",
                  "src": "4774:22:5"
                }
              ]
            },
            "documentation": "@notice Gets balance of this contract in terms of Ether, before this message\n@dev This excludes the value of the current message, if any\n@return The quantity of Ether owned by this contract",
            "id": 1652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCashPrior",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4597:2:5"
            },
            "returnParameters": {
              "id": 1628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1627,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "4623:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1626,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4623:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4622:6:5"
            },
            "scope": 1863,
            "src": "4576:227:5",
            "stateMutability": "view",
            "superFunction": 5433,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1680,
              "nodeType": "Block",
              "src": "5160:175:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1662,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13762,
                            "src": "5203:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5203:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1664,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1654,
                          "src": "5217:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5203:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206d69736d61746368",
                        "id": 1666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5223:17:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        },
                        "value": "sender mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        }
                      ],
                      "id": 1661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13766,
                      "src": "5195:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5195:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1668,
                  "nodeType": "ExpressionStatement",
                  "src": "5195:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1670,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13762,
                            "src": "5259:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5259:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1672,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1656,
                          "src": "5272:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5259:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d69736d61746368",
                        "id": 1674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5280:16:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        },
                        "value": "value mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        }
                      ],
                      "id": 1669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13766,
                      "src": "5251:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5251:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1676,
                  "nodeType": "ExpressionStatement",
                  "src": "5251:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1677,
                      "name": "Error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11213,
                      "src": "5314:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Error_$11213_$",
                        "typeString": "type(enum TokenErrorReporter.Error)"
                      }
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NO_ERROR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5314:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$11213",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "functionReturnParameters": 1660,
                  "id": 1679,
                  "nodeType": "Return",
                  "src": "5307:21:5"
                }
              ]
            },
            "documentation": "@notice Checks whether the requested transfer matches the `msg`\n@dev Does NOT do a transfer\n@param from Address sending the Ether\n@param amount Amount of Ether being sent\n@return Whether or not the transfer checks out",
            "id": 1681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1654,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "5103:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5103:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1656,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "5117:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1655,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5117:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5102:27:5"
            },
            "returnParameters": {
              "id": 1660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1659,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "5153:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$11213",
                    "typeString": "enum TokenErrorReporter.Error"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1658,
                    "name": "Error",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11213,
                    "src": "5153:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$11213",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5152:7:5"
            },
            "scope": 1863,
            "src": "5078:257:5",
            "stateMutability": "view",
            "superFunction": 5442,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1708,
              "nodeType": "Block",
              "src": "5641:167:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1691,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13762,
                            "src": "5684:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5684:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1693,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1683,
                          "src": "5698:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5684:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206d69736d61746368",
                        "id": 1695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5704:17:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        },
                        "value": "sender mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        }
                      ],
                      "id": 1690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13766,
                      "src": "5676:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5676:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1697,
                  "nodeType": "ExpressionStatement",
                  "src": "5676:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1699,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13762,
                            "src": "5740:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5740:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1701,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1685,
                          "src": "5753:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5740:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d69736d61746368",
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5761:16:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        },
                        "value": "value mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        }
                      ],
                      "id": 1698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13766,
                      "src": "5732:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5732:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1705,
                  "nodeType": "ExpressionStatement",
                  "src": "5732:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1706,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1685,
                    "src": "5795:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1689,
                  "id": 1707,
                  "nodeType": "Return",
                  "src": "5788:13:5"
                }
              ]
            },
            "documentation": "@notice Perform the actual transfer in, which is a no-op\n@param from Address sending the Ether\n@param amount Amount of Ether being sent\n@return The actual amount of Ether transferred",
            "id": 1709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1683,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "5590:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5590:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1685,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "5604:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1684,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5604:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5589:27:5"
            },
            "returnParameters": {
              "id": 1689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "5635:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5635:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5634:6:5"
            },
            "scope": 1863,
            "src": "5568:240:5",
            "stateMutability": "nonpayable",
            "superFunction": 5451,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1722,
              "nodeType": "Block",
              "src": "5879:105:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1719,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "5970:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1716,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "5958:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5958:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5958:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1721,
                  "nodeType": "ExpressionStatement",
                  "src": "5958:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 1723,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferOut",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1711,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1723,
                  "src": "5837:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5837:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1713,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1723,
                  "src": "5857:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1712,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5857:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5836:33:5"
            },
            "returnParameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5879:0:5"
            },
            "scope": 1863,
            "src": "5814:170:5",
            "stateMutability": "nonpayable",
            "superFunction": 5458,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1861,
              "nodeType": "Block",
              "src": "6065:618:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1730,
                      "name": "errCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1725,
                      "src": "6079:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1732,
                            "name": "Error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11213,
                            "src": "6095:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Error_$11213_$",
                              "typeString": "type(enum TokenErrorReporter.Error)"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6095:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$11213",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Error_$11213",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        ],
                        "id": 1731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6090:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 1734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6090:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6079:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1738,
                  "nodeType": "IfStatement",
                  "src": "6075:68:5",
                  "trueBody": {
                    "id": 1737,
                    "nodeType": "Block",
                    "src": "6112:31:5",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 1729,
                        "id": 1736,
                        "nodeType": "Return",
                        "src": "6126:7:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1740,
                      "name": "fullMessage",
                      "nodeType": "VariableDeclaration",
                      "scope": 1861,
                      "src": "6153:24:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1739,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6153:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1750,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1744,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1727,
                                "src": "6196:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6190:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6190:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6190:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 1747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6214:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "6190:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6180:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 1741,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6184:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 1749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6180:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6153:63:5"
                },
                {
                  "assignments": [
                    1752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1752,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 1861,
                      "src": "6226:6:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1751,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6226:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1753,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6226:6:5"
                },
                {
                  "body": {
                    "id": 1777,
                    "nodeType": "Block",
                    "src": "6287:59:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1767,
                              "name": "fullMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "6301:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1769,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1768,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1752,
                              "src": "6313:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6301:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1771,
                                  "name": "message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1727,
                                  "src": "6324:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6318:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 1772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6318:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1774,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1773,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1752,
                              "src": "6333:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6318:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "6301:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1776,
                        "nodeType": "ExpressionStatement",
                        "src": "6301:34:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1758,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1752,
                      "src": "6255:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1760,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1727,
                            "src": "6265:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6259:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6259:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6259:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6255:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1778,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1754,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1752,
                        "src": "6248:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6252:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6248:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1757,
                    "nodeType": "ExpressionStatement",
                    "src": "6248:5:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6282:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1764,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1752,
                        "src": "6282:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1766,
                    "nodeType": "ExpressionStatement",
                    "src": "6282:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "6243:103:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1779,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "6356:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1783,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1780,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "6368:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6370:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6368:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6356:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3332",
                              "id": 1786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6386:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              }
                            ],
                            "id": 1785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6380:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6380:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6375:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6375:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6356:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1790,
                  "nodeType": "ExpressionStatement",
                  "src": "6356:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1791,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "6400:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1795,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1792,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "6412:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6414:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6412:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6400:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3430",
                              "id": 1798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6430:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              }
                            ],
                            "id": 1797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6424:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6424:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6419:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6419:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6400:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1802,
                  "nodeType": "ExpressionStatement",
                  "src": "6400:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1803,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "6444:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1807,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1804,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "6456:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6458:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6456:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6444:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 1810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6474:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1813,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1811,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1725,
                                      "src": "6481:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 1812,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6491:2:5",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6481:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1814,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6479:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6474:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6468:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6468:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6463:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6463:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6444:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1819,
                  "nodeType": "ExpressionStatement",
                  "src": "6444:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1820,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "6507:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1824,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1821,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "6519:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 1822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6521:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "6519:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6507:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 1827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6537:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1830,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1828,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1725,
                                      "src": "6544:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "%",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 1829,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6554:2:5",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6544:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1831,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6542:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6537:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6531:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6531:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6526:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6526:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6507:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1836,
                  "nodeType": "ExpressionStatement",
                  "src": "6507:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1837,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "6570:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1841,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1838,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "6582:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 1839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6584:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6582:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6570:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3431",
                              "id": 1844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6600:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              },
                              "value": "41"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              }
                            ],
                            "id": 1843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6594:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6594:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6589:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6589:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6570:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1848,
                  "nodeType": "ExpressionStatement",
                  "src": "6570:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1850,
                          "name": "errCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1725,
                          "src": "6623:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1852,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11213,
                                "src": "6639:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$11213_$",
                                  "typeString": "type(enum TokenErrorReporter.Error)"
                                }
                              },
                              "id": 1853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NO_ERROR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6639:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$11213",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$11213",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            ],
                            "id": 1851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6634:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 1854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6634:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6623:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1857,
                            "name": "fullMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1740,
                            "src": "6663:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6656:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6656:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13766,
                      "src": "6615:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6615:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1860,
                  "nodeType": "ExpressionStatement",
                  "src": "6615:61:5"
                }
              ]
            },
            "documentation": null,
            "id": 1862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requireNoError",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1725,
                  "name": "errCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1862,
                  "src": "6014:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6014:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1727,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 1862,
                  "src": "6028:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1726,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6028:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6013:37:5"
            },
            "returnParameters": {
              "id": 1729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6065:0:5"
            },
            "scope": 1863,
            "src": "5990:693:5",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1864,
        "src": "151:6534:5"
      }
    ],
    "src": "0:6686:5"
  },
  "legacyAST": {
    "absolutePath": "/home/belvis/ethereum/private-Ethereum-TestNet/contracts/compound/CEther.sol",
    "exportedSymbols": {
      "CEther": [
        1863
      ]
    },
    "id": 1864,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1460,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/home/belvis/ethereum/private-Ethereum-TestNet/contracts/compound/CToken.sol",
        "file": "./CToken.sol",
        "id": 1461,
        "nodeType": "ImportDirective",
        "scope": 1864,
        "sourceUnit": 5477,
        "src": "26:22:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1462,
              "name": "CToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5476,
              "src": "170:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CToken_$5476",
                "typeString": "contract CToken"
              }
            },
            "id": 1463,
            "nodeType": "InheritanceSpecifier",
            "src": "170:6:5"
          }
        ],
        "contractDependencies": [
          5476,
          5536,
          5837,
          6122,
          11354,
          11961
        ],
        "contractKind": "contract",
        "documentation": "@title Compound's CEther Contract\n@notice CToken which wraps Ether\n@author Compound",
        "fullyImplemented": true,
        "id": 1863,
        "linearizedBaseContracts": [
          1863,
          5476,
          11354,
          11961,
          6122,
          5837,
          5536
        ],
        "name": "CEther",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1498,
              "nodeType": "Block",
              "src": "996:302:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1480,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5496,
                      "src": "1072:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1481,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13762,
                        "src": "1080:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1080:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1072:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1484,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1486,
                        "name": "comptroller_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1465,
                        "src": "1112:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ComptrollerInterface_$10905",
                          "typeString": "contract ComptrollerInterface"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1487,
                        "name": "interestRateModel_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1467,
                        "src": "1126:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_InterestRateModel_$11993",
                          "typeString": "contract InterestRateModel"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1488,
                        "name": "initialExchangeRateMantissa_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1469,
                        "src": "1146:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1489,
                        "name": "name_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1471,
                        "src": "1176:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1490,
                        "name": "symbol_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1473,
                        "src": "1183:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1491,
                        "name": "decimals_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1475,
                        "src": "1192:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ComptrollerInterface_$10905",
                          "typeString": "contract ComptrollerInterface"
                        },
                        {
                          "typeIdentifier": "t_contract$_InterestRateModel_$11993",
                          "typeString": "contract InterestRateModel"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 1485,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "1101:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ComptrollerInterface_$10905_$_t_contract$_InterestRateModel_$11993_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$returns$__$",
                        "typeString": "function (contract ComptrollerInterface,contract InterestRateModel,uint256,string memory,string memory,uint8)"
                      }
                    },
                    "id": 1492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1101:101:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1493,
                  "nodeType": "ExpressionStatement",
                  "src": "1101:101:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1494,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5496,
                      "src": "1277:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1495,
                      "name": "admin_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1477,
                      "src": "1285:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1277:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1497,
                  "nodeType": "ExpressionStatement",
                  "src": "1277:14:5"
                }
              ]
            },
            "documentation": "@notice Construct a new CEther money market\n@param comptroller_ The address of the Comptroller\n@param interestRateModel_ The address of the interest rate model\n@param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\n@param name_ ERC-20 name of this token\n@param symbol_ ERC-20 symbol of this token\n@param decimals_ ERC-20 decimal precision of this token\n@param admin_ Address of the administrator of this token",
            "id": 1499,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1465,
                  "name": "comptroller_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "700:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ComptrollerInterface_$10905",
                    "typeString": "contract ComptrollerInterface"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1464,
                    "name": "ComptrollerInterface",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10905,
                    "src": "700:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ComptrollerInterface_$10905",
                      "typeString": "contract ComptrollerInterface"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1467,
                  "name": "interestRateModel_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "751:36:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_InterestRateModel_$11993",
                    "typeString": "contract InterestRateModel"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1466,
                    "name": "InterestRateModel",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11993,
                    "src": "751:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InterestRateModel_$11993",
                      "typeString": "contract InterestRateModel"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1469,
                  "name": "initialExchangeRateMantissa_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "805:33:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1468,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1471,
                  "name": "name_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "856:19:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "856:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1473,
                  "name": "symbol_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "893:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1472,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "893:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1475,
                  "name": "decimals_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "932:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1474,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "932:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1477,
                  "name": "admin_",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "965:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "699:289:5"
            },
            "returnParameters": {
              "id": 1479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "996:0:5"
            },
            "scope": 1863,
            "src": "688:610:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1514,
              "nodeType": "Block",
              "src": "1508:98:5",
              "statements": [
                {
                  "assignments": [
                    1503,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1503,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1514,
                      "src": "1519:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1502,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1519:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1508,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1505,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "1545:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1545:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1504,
                      "name": "mintInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3063,
                      "src": "1532:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1532:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1518:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1510,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1503,
                        "src": "1580:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1585:13:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 1509,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "1565:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1565:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1513,
                  "nodeType": "ExpressionStatement",
                  "src": "1565:34:5"
                }
              ]
            },
            "documentation": "@notice Sender supplies assets into the market and receives cTokens in exchange\n@dev Reverts upon any failure",
            "id": 1515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1488:2:5"
            },
            "returnParameters": {
              "id": 1501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1508:0:5"
            },
            "scope": 1863,
            "src": "1475:131:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1526,
              "nodeType": "Block",
              "src": "2008:52:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1523,
                        "name": "redeemTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1517,
                        "src": "2040:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1522,
                      "name": "redeemInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3357,
                      "src": "2025:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1521,
                  "id": 1525,
                  "nodeType": "Return",
                  "src": "2018:35:5"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for the underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemTokens The number of cTokens to redeem into underlying\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1517,
                  "name": "redeemTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "1965:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1516,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1964:19:5"
            },
            "returnParameters": {
              "id": 1521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1520,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1527,
                  "src": "2002:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1519,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2001:6:5"
            },
            "scope": 1863,
            "src": "1949:111:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1538,
              "nodeType": "Block",
              "src": "2477:62:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1535,
                        "name": "redeemAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "2519:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1534,
                      "name": "redeemUnderlyingInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3395,
                      "src": "2494:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2494:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1533,
                  "id": 1537,
                  "nodeType": "Return",
                  "src": "2487:45:5"
                }
              ]
            },
            "documentation": "@notice Sender redeems cTokens in exchange for a specified amount of underlying asset\n@dev Accrues interest whether or not the operation succeeds, unless reverted\n@param redeemAmount The amount of underlying to redeem\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeemUnderlying",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1529,
                  "name": "redeemAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "2434:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2433:19:5"
            },
            "returnParameters": {
              "id": 1533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1532,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1539,
                  "src": "2471:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1531,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2471:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2470:6:5"
            },
            "scope": 1863,
            "src": "2408:131:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1550,
              "nodeType": "Block",
              "src": "2859:52:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1547,
                        "name": "borrowAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "2891:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1546,
                      "name": "borrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3754,
                      "src": "2876:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2876:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1545,
                  "id": 1549,
                  "nodeType": "Return",
                  "src": "2869:35:5"
                }
              ]
            },
            "documentation": "@notice Sender borrows assets from the protocol to their own address\n@param borrowAmount The amount of the underlying asset to borrow\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
            "id": 1551,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "borrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1541,
                  "name": "borrowAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "2816:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2816:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2815:19:5"
            },
            "returnParameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "2853:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2852:6:5"
            },
            "scope": 1863,
            "src": "2800:111:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1566,
              "nodeType": "Block",
              "src": "3056:112:5",
              "statements": [
                {
                  "assignments": [
                    1555,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1555,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1566,
                      "src": "3067:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1554,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3067:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1560,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1557,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "3100:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3100:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1556,
                      "name": "repayBorrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4008,
                      "src": "3080:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3080:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3066:44:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1562,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "3135:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77206661696c6564",
                        "id": 1563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3140:20:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        },
                        "value": "repayBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc0320030fd505143f94463969fe29ebd4f928aabfd0cbc88253079d4c076d1",
                          "typeString": "literal_string \"repayBorrow failed\""
                        }
                      ],
                      "id": 1561,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "3120:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3120:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1565,
                  "nodeType": "ExpressionStatement",
                  "src": "3120:41:5"
                }
              ]
            },
            "documentation": "@notice Sender repays their own borrow\n@dev Reverts upon any failure",
            "id": 1567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3036:2:5"
            },
            "returnParameters": {
              "id": 1553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3056:0:5"
            },
            "scope": 1863,
            "src": "3016:152:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1585,
              "nodeType": "Block",
              "src": "3414:134:5",
              "statements": [
                {
                  "assignments": [
                    1573,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1573,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1585,
                      "src": "3425:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1572,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3425:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1579,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1575,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1569,
                        "src": "3464:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1576,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "3474:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3474:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1574,
                      "name": "repayBorrowBehalfInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4052,
                      "src": "3438:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3438:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3424:60:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1581,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1573,
                        "src": "3509:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7265706179426f72726f77426568616c66206661696c6564",
                        "id": 1582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3514:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        },
                        "value": "repayBorrowBehalf failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4691b01e3c08567469097176368c23bcb592f788fefdc9ffd84d4c950b22ec5",
                          "typeString": "literal_string \"repayBorrowBehalf failed\""
                        }
                      ],
                      "id": 1580,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "3494:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1584,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:47:5"
                }
              ]
            },
            "documentation": "@notice Sender repays a borrow belonging to borrower\n@dev Reverts upon any failure\n@param borrower the account with the debt being payed off",
            "id": 1586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "repayBorrowBehalf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1569,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1586,
                  "src": "3379:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3379:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3378:18:5"
            },
            "returnParameters": {
              "id": 1571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3414:0:5"
            },
            "scope": 1863,
            "src": "3352:196:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1607,
              "nodeType": "Block",
              "src": "3976:148:5",
              "statements": [
                {
                  "assignments": [
                    1594,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1594,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1607,
                      "src": "3987:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1593,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3987:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1601,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1596,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1588,
                        "src": "4024:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1597,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "4034:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4034:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1599,
                        "name": "cTokenCollateral",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1590,
                        "src": "4045:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CToken_$5476",
                          "typeString": "contract CToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_CToken_$5476",
                          "typeString": "contract CToken"
                        }
                      ],
                      "id": 1595,
                      "name": "liquidateBorrowInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4395,
                      "src": "4000:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_CTokenInterface_$5837_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,contract CTokenInterface) returns (uint256,uint256)"
                      }
                    },
                    "id": 1600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4000:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3986:76:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1603,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1594,
                        "src": "4087:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6c6971756964617465426f72726f77206661696c6564",
                        "id": 1604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4092:24:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        },
                        "value": "liquidateBorrow failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8368d8c1033f63b0f7ff0ee8a8a85b929ea25bfefeb6e5f20dd14cd9fcea3868",
                          "typeString": "literal_string \"liquidateBorrow failed\""
                        }
                      ],
                      "id": 1602,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "4072:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4072:45:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1606,
                  "nodeType": "ExpressionStatement",
                  "src": "4072:45:5"
                }
              ]
            },
            "documentation": "@notice The sender liquidates the borrowers collateral.\n The collateral seized is transferred to the liquidator.\n@dev Reverts upon any failure\n@param borrower The borrower of this cToken to be liquidated\n@param cTokenCollateral The market in which to seize collateral from the borrower",
            "id": 1608,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "liquidateBorrow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1588,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "3916:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3916:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1590,
                  "name": "cTokenCollateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 1608,
                  "src": "3934:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$5476",
                    "typeString": "contract CToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1589,
                    "name": "CToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5476,
                    "src": "3934:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CToken_$5476",
                      "typeString": "contract CToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3915:43:5"
            },
            "returnParameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3976:0:5"
            },
            "scope": 1863,
            "src": "3891:233:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1623,
              "nodeType": "Block",
              "src": "4219:98:5",
              "statements": [
                {
                  "assignments": [
                    1612,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1612,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1623,
                      "src": "4230:8:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1611,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4230:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1617,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1614,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "4256:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4256:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1613,
                      "name": "mintInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3063,
                      "src": "4243:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256,uint256)"
                      }
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4243:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4229:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1619,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1612,
                        "src": "4291:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e74206661696c6564",
                        "id": 1620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4296:13:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        },
                        "value": "mint failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_594ff2dfc35e5b8979a04d047bc1811cd0832013e67a9ef5bc97a173e7a27efb",
                          "typeString": "literal_string \"mint failed\""
                        }
                      ],
                      "id": 1618,
                      "name": "requireNoError",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1862,
                      "src": "4276:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) pure"
                      }
                    },
                    "id": 1621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4276:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1622,
                  "nodeType": "ExpressionStatement",
                  "src": "4276:34:5"
                }
              ]
            },
            "documentation": "@notice Send Ether to CEther to mint",
            "id": 1624,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4199:2:5"
            },
            "returnParameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4219:0:5"
            },
            "scope": 1863,
            "src": "4190:127:5",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1651,
              "nodeType": "Block",
              "src": "4629:174:5",
              "statements": [
                {
                  "assignments": [
                    1630,
                    1632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1630,
                      "name": "err",
                      "nodeType": "VariableDeclaration",
                      "scope": 1651,
                      "src": "4640:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_MathError_$5944",
                        "typeString": "enum CarefulMath.MathError"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1629,
                        "name": "MathError",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5944,
                        "src": "4640:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_MathError_$5944",
                          "typeString": "enum CarefulMath.MathError"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1632,
                      "name": "startingBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 1651,
                      "src": "4655:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1631,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4655:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1641,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1635,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13818,
                              "src": "4695:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CEther_$1863",
                                "typeString": "contract CEther"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CEther_$1863",
                                "typeString": "contract CEther"
                              }
                            ],
                            "id": 1634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4687:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4687:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4687:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1638,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13762,
                          "src": "4710:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4710:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1633,
                      "name": "subUInt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6049,
                      "src": "4679:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_enum$_MathError_$5944_$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (enum CarefulMath.MathError,uint256)"
                      }
                    },
                    "id": 1640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4679:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_enum$_MathError_$5944_$_t_uint256_$",
                      "typeString": "tuple(enum CarefulMath.MathError,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4639:81:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_MathError_$5944",
                          "typeString": "enum CarefulMath.MathError"
                        },
                        "id": 1646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1643,
                          "name": "err",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1630,
                          "src": "4738:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$5944",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1644,
                            "name": "MathError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5944,
                            "src": "4745:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_MathError_$5944_$",
                              "typeString": "type(enum CarefulMath.MathError)"
                            }
                          },
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4745:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_MathError_$5944",
                            "typeString": "enum CarefulMath.MathError"
                          }
                        },
                        "src": "4738:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13765,
                      "src": "4730:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4730:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1648,
                  "nodeType": "ExpressionStatement",
                  "src": "4730:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1649,
                    "name": "startingBalance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1632,
                    "src": "4781:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1628,
                  "id": 1650,
                  "nodeType": "Return",
                  "src": "4774:22:5"
                }
              ]
            },
            "documentation": "@notice Gets balance of this contract in terms of Ether, before this message\n@dev This excludes the value of the current message, if any\n@return The quantity of Ether owned by this contract",
            "id": 1652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCashPrior",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4597:2:5"
            },
            "returnParameters": {
              "id": 1628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1627,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1652,
                  "src": "4623:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1626,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4623:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4622:6:5"
            },
            "scope": 1863,
            "src": "4576:227:5",
            "stateMutability": "view",
            "superFunction": 5433,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1680,
              "nodeType": "Block",
              "src": "5160:175:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1662,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13762,
                            "src": "5203:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5203:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1664,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1654,
                          "src": "5217:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5203:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206d69736d61746368",
                        "id": 1666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5223:17:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        },
                        "value": "sender mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        }
                      ],
                      "id": 1661,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13766,
                      "src": "5195:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5195:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1668,
                  "nodeType": "ExpressionStatement",
                  "src": "5195:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1670,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13762,
                            "src": "5259:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5259:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1672,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1656,
                          "src": "5272:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5259:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d69736d61746368",
                        "id": 1674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5280:16:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        },
                        "value": "value mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        }
                      ],
                      "id": 1669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13766,
                      "src": "5251:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5251:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1676,
                  "nodeType": "ExpressionStatement",
                  "src": "5251:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1677,
                      "name": "Error",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11213,
                      "src": "5314:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Error_$11213_$",
                        "typeString": "type(enum TokenErrorReporter.Error)"
                      }
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "NO_ERROR",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5314:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$11213",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "functionReturnParameters": 1660,
                  "id": 1679,
                  "nodeType": "Return",
                  "src": "5307:21:5"
                }
              ]
            },
            "documentation": "@notice Checks whether the requested transfer matches the `msg`\n@dev Does NOT do a transfer\n@param from Address sending the Ether\n@param amount Amount of Ether being sent\n@return Whether or not the transfer checks out",
            "id": 1681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1654,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "5103:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5103:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1656,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "5117:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1655,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5117:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5102:27:5"
            },
            "returnParameters": {
              "id": 1660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1659,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1681,
                  "src": "5153:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Error_$11213",
                    "typeString": "enum TokenErrorReporter.Error"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1658,
                    "name": "Error",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11213,
                    "src": "5153:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Error_$11213",
                      "typeString": "enum TokenErrorReporter.Error"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5152:7:5"
            },
            "scope": 1863,
            "src": "5078:257:5",
            "stateMutability": "view",
            "superFunction": 5442,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1708,
              "nodeType": "Block",
              "src": "5641:167:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1691,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13762,
                            "src": "5684:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5684:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1693,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1683,
                          "src": "5698:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5684:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "73656e646572206d69736d61746368",
                        "id": 1695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5704:17:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        },
                        "value": "sender mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec10cda3ed0448251fb76d48fe16588d83090ec2a7e812497abe453bd3a227",
                          "typeString": "literal_string \"sender mismatch\""
                        }
                      ],
                      "id": 1690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13766,
                      "src": "5676:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5676:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1697,
                  "nodeType": "ExpressionStatement",
                  "src": "5676:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1699,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13762,
                            "src": "5740:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5740:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1701,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1685,
                          "src": "5753:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5740:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "76616c7565206d69736d61746368",
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5761:16:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        },
                        "value": "value mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7751e5e526b2328b6bcb95abb71083ab9494d56ba4b478aaf40eba9688e65b52",
                          "typeString": "literal_string \"value mismatch\""
                        }
                      ],
                      "id": 1698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13766,
                      "src": "5732:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5732:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1705,
                  "nodeType": "ExpressionStatement",
                  "src": "5732:46:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1706,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1685,
                    "src": "5795:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1689,
                  "id": 1707,
                  "nodeType": "Return",
                  "src": "5788:13:5"
                }
              ]
            },
            "documentation": "@notice Perform the actual transfer in, which is a no-op\n@param from Address sending the Ether\n@param amount Amount of Ether being sent\n@return The actual amount of Ether transferred",
            "id": 1709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferIn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1683,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "5590:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5590:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1685,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "5604:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1684,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5604:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5589:27:5"
            },
            "returnParameters": {
              "id": 1689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1688,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "5635:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1687,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5635:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5634:6:5"
            },
            "scope": 1863,
            "src": "5568:240:5",
            "stateMutability": "nonpayable",
            "superFunction": 5451,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1722,
              "nodeType": "Block",
              "src": "5879:105:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1719,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1713,
                        "src": "5970:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1716,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "5958:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5958:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5958:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1721,
                  "nodeType": "ExpressionStatement",
                  "src": "5958:19:5"
                }
              ]
            },
            "documentation": null,
            "id": 1723,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doTransferOut",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1711,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1723,
                  "src": "5837:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5837:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1713,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1723,
                  "src": "5857:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1712,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5857:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5836:33:5"
            },
            "returnParameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5879:0:5"
            },
            "scope": 1863,
            "src": "5814:170:5",
            "stateMutability": "nonpayable",
            "superFunction": 5458,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1861,
              "nodeType": "Block",
              "src": "6065:618:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1730,
                      "name": "errCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1725,
                      "src": "6079:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1732,
                            "name": "Error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11213,
                            "src": "6095:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Error_$11213_$",
                              "typeString": "type(enum TokenErrorReporter.Error)"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NO_ERROR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6095:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$11213",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_Error_$11213",
                            "typeString": "enum TokenErrorReporter.Error"
                          }
                        ],
                        "id": 1731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6090:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 1734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6090:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6079:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1738,
                  "nodeType": "IfStatement",
                  "src": "6075:68:5",
                  "trueBody": {
                    "id": 1737,
                    "nodeType": "Block",
                    "src": "6112:31:5",
                    "statements": [
                      {
                        "expression": null,
                        "functionReturnParameters": 1729,
                        "id": 1736,
                        "nodeType": "Return",
                        "src": "6126:7:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1740
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1740,
                      "name": "fullMessage",
                      "nodeType": "VariableDeclaration",
                      "scope": 1861,
                      "src": "6153:24:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1739,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6153:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1750,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1744,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1727,
                                "src": "6196:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 1743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6190:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": "bytes"
                            },
                            "id": 1745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6190:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6190:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "35",
                          "id": 1747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6214:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        },
                        "src": "6190:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6180:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 1741,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6184:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 1749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6180:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6153:63:5"
                },
                {
                  "assignments": [
                    1752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1752,
                      "name": "i",
                      "nodeType": "VariableDeclaration",
                      "scope": 1861,
                      "src": "6226:6:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1751,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6226:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1753,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6226:6:5"
                },
                {
                  "body": {
                    "id": 1777,
                    "nodeType": "Block",
                    "src": "6287:59:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1767,
                              "name": "fullMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "6301:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1769,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1768,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1752,
                              "src": "6313:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6301:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1771,
                                  "name": "message",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1727,
                                  "src": "6324:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6318:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 1772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6318:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1774,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1773,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1752,
                              "src": "6333:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6318:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "6301:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1776,
                        "nodeType": "ExpressionStatement",
                        "src": "6301:34:5"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1758,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1752,
                      "src": "6255:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1760,
                            "name": "message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1727,
                            "src": "6265:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 1759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6259:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 1761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6259:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6259:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6255:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1778,
                  "initializationExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 1754,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1752,
                        "src": "6248:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6252:1:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6248:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1757,
                    "nodeType": "ExpressionStatement",
                    "src": "6248:5:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6282:3:5",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1764,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1752,
                        "src": "6282:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1766,
                    "nodeType": "ExpressionStatement",
                    "src": "6282:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "6243:103:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1779,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "6356:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1783,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1780,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "6368:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6370:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6368:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6356:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3332",
                              "id": 1786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6386:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              },
                              "value": "32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32_by_1",
                                "typeString": "int_const 32"
                              }
                            ],
                            "id": 1785,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6380:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6380:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6375:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6375:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6356:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1790,
                  "nodeType": "ExpressionStatement",
                  "src": "6356:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1791,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "6400:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1795,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1792,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "6412:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6414:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6412:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6400:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3430",
                              "id": 1798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6430:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              },
                              "value": "40"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_40_by_1",
                                "typeString": "int_const 40"
                              }
                            ],
                            "id": 1797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6424:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6424:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6419:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6419:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6400:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1802,
                  "nodeType": "ExpressionStatement",
                  "src": "6400:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1803,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "6444:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1807,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1804,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "6456:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6458:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "6456:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6444:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 1810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6474:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1813,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1811,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1725,
                                      "src": "6481:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 1812,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6491:2:5",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6481:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1814,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6479:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6474:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6468:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6468:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6463:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6463:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6444:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1819,
                  "nodeType": "ExpressionStatement",
                  "src": "6444:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1820,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "6507:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1824,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1821,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "6519:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "33",
                          "id": 1822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6521:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "6519:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6507:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "hexValue": "3438",
                                "id": 1827,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6537:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_48_by_1",
                                  "typeString": "int_const 48"
                                },
                                "value": "48"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1830,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1828,
                                      "name": "errCode",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1725,
                                      "src": "6544:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "%",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "3130",
                                      "id": 1829,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6554:2:5",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "src": "6544:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1831,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6542:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6537:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1826,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6531:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6531:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6526:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6526:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6507:53:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1836,
                  "nodeType": "ExpressionStatement",
                  "src": "6507:53:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1837,
                        "name": "fullMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1740,
                        "src": "6570:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1841,
                      "indexExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1838,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1752,
                          "src": "6582:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 1839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6584:1:5",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        },
                        "src": "6582:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6570:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3431",
                              "id": 1844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6600:2:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              },
                              "value": "41"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_41_by_1",
                                "typeString": "int_const 41"
                              }
                            ],
                            "id": 1843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6594:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 1845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6594:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 1842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6589:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes1_$",
                          "typeString": "type(bytes1)"
                        },
                        "typeName": "byte"
                      },
                      "id": 1846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6589:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "src": "6570:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1848,
                  "nodeType": "ExpressionStatement",
                  "src": "6570:34:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1850,
                          "name": "errCode",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1725,
                          "src": "6623:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1852,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11213,
                                "src": "6639:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$11213_$",
                                  "typeString": "type(enum TokenErrorReporter.Error)"
                                }
                              },
                              "id": 1853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NO_ERROR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "6639:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$11213",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$11213",
                                "typeString": "enum TokenErrorReporter.Error"
                              }
                            ],
                            "id": 1851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6634:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 1854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6634:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6623:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1857,
                            "name": "fullMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1740,
                            "src": "6663:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6656:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                            "typeString": "type(string storage pointer)"
                          },
                          "typeName": "string"
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6656:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13765,
                        13766
                      ],
                      "referencedDeclaration": 13766,
                      "src": "6615:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6615:61:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1860,
                  "nodeType": "ExpressionStatement",
                  "src": "6615:61:5"
                }
              ]
            },
            "documentation": null,
            "id": 1862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "requireNoError",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1725,
                  "name": "errCode",
                  "nodeType": "VariableDeclaration",
                  "scope": 1862,
                  "src": "6014:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6014:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1727,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 1862,
                  "src": "6028:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1726,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6028:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6013:37:5"
            },
            "returnParameters": {
              "id": 1729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6065:0:5"
            },
            "scope": 1863,
            "src": "5990:693:5",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1864,
        "src": "151:6534:5"
      }
    ],
    "src": "0:6686:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2020-02-04T23:45:34.398Z",
  "devdoc": {
    "author": "Compound",
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_reduceReserves(uint256)": {
        "params": {
          "reduceAmount": "Amount of reduction to reserves"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setComptroller(address)": {
        "details": "Admin function to set a new comptroller",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setInterestRateModel(address)": {
        "details": "Admin function to accrue interest and update the interest rate model",
        "params": {
          "newInterestRateModel": "the new interest rate model to use"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_setReserveFactor(uint256)": {
        "details": "Admin function to accrue interest and set a new reserve factor",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "accrueInterest()": {
        "details": "This calculates interest accrued from the last checkpointed block  up to the current block and writes new checkpoint to storage."
      },
      "allowance(address,address)": {
        "params": {
          "owner": "The address of the account which owns the tokens to be spent",
          "spender": "The address of the account which may transfer tokens"
        },
        "return": "The number of tokens allowed to be spent (-1 means infinite)"
      },
      "approve(address,uint256)": {
        "details": "This will overwrite the approval amount for `spender` and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
        "params": {
          "amount": "The number of tokens that are approved (-1 means infinite)",
          "spender": "The address of the account which may transfer tokens"
        },
        "return": "Whether or not the approval succeeded"
      },
      "balanceOf(address)": {
        "params": {
          "owner": "The address of the account to query"
        },
        "return": "The number of tokens owned by `owner`"
      },
      "balanceOfUnderlying(address)": {
        "details": "This also accrues interest in a transaction",
        "params": {
          "owner": "The address of the account to query"
        },
        "return": "The amount of underlying owned by `owner`"
      },
      "borrow(uint256)": {
        "params": {
          "borrowAmount": "The amount of the underlying asset to borrow"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "borrowBalanceCurrent(address)": {
        "params": {
          "account": "The address whose balance should be calculated after updating borrowIndex"
        },
        "return": "The calculated balance"
      },
      "borrowBalanceStored(address)": {
        "params": {
          "account": "The address whose balance should be calculated"
        },
        "return": "The calculated balance"
      },
      "borrowRatePerBlock()": {
        "return": "The borrow interest rate per block, scaled by 1e18"
      },
      "constructor": {
        "params": {
          "admin_": "Address of the administrator of this token",
          "comptroller_": "The address of the Comptroller",
          "decimals_": "ERC-20 decimal precision of this token",
          "initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18",
          "interestRateModel_": "The address of the interest rate model",
          "name_": "ERC-20 name of this token",
          "symbol_": "ERC-20 symbol of this token"
        }
      },
      "exchangeRateCurrent()": {
        "return": "Calculated exchange rate scaled by 1e18"
      },
      "exchangeRateStored()": {
        "details": "This function does not accrue interest before calculating the exchange rate",
        "return": "Calculated exchange rate scaled by 1e18"
      },
      "getAccountSnapshot(address)": {
        "details": "This is used by comptroller to more efficiently perform liquidity checks.",
        "params": {
          "account": "Address of the account to snapshot"
        },
        "return": "(possible error, token balance, borrow balance, exchange rate mantissa)"
      },
      "getCash()": {
        "return": "The quantity of underlying asset owned by this contract"
      },
      "initialize(address,address,uint256,string,string,uint8)": {
        "params": {
          "comptroller_": "The address of the Comptroller",
          "decimals_": "EIP-20 decimal precision of this token",
          "initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18",
          "interestRateModel_": "The address of the interest rate model",
          "name_": "EIP-20 name of this token",
          "symbol_": "EIP-20 symbol of this token"
        }
      },
      "liquidateBorrow(address,address)": {
        "details": "Reverts upon any failure",
        "params": {
          "borrower": "The borrower of this cToken to be liquidated",
          "cTokenCollateral": "The market in which to seize collateral from the borrower"
        }
      },
      "mint()": {
        "details": "Reverts upon any failure"
      },
      "redeem(uint256)": {
        "details": "Accrues interest whether or not the operation succeeds, unless reverted",
        "params": {
          "redeemTokens": "The number of cTokens to redeem into underlying"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "redeemUnderlying(uint256)": {
        "details": "Accrues interest whether or not the operation succeeds, unless reverted",
        "params": {
          "redeemAmount": "The amount of underlying to redeem"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "repayBorrow()": {
        "details": "Reverts upon any failure"
      },
      "repayBorrowBehalf(address)": {
        "details": "Reverts upon any failure",
        "params": {
          "borrower": "the account with the debt being payed off"
        }
      },
      "seize(address,address,uint256)": {
        "details": "Will fail unless called by another cToken during the process of liquidation. Its absolutely critical to use msg.sender as the borrowed cToken and not a parameter.",
        "params": {
          "borrower": "The account having collateral seized",
          "liquidator": "The account receiving seized collateral",
          "seizeTokens": "The number of cTokens to seize"
        },
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "supplyRatePerBlock()": {
        "return": "The supply interest rate per block, scaled by 1e18"
      },
      "totalBorrowsCurrent()": {
        "return": "The total borrows with interest"
      },
      "transfer(address,uint256)": {
        "params": {
          "amount": "The number of tokens to transfer",
          "dst": "The address of the destination account"
        },
        "return": "Whether or not the transfer succeeded"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "amount": "The number of tokens to transfer",
          "dst": "The address of the destination account",
          "src": "The address of the source account"
        },
        "return": "Whether or not the transfer succeeded"
      }
    },
    "title": "Compound's CEther Contract"
  },
  "userdoc": {
    "methods": {
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_reduceReserves(uint256)": {
        "notice": "Accrues interest and reduces reserves by transferring to admin"
      },
      "_setComptroller(address)": {
        "notice": "Sets a new comptroller for the market"
      },
      "_setInterestRateModel(address)": {
        "notice": "accrues interest and updates the interest rate model using _setInterestRateModelFresh"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setReserveFactor(uint256)": {
        "notice": "accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh"
      },
      "accrueInterest()": {
        "notice": "Applies accrued interest to total borrows and reserves"
      },
      "allowance(address,address)": {
        "notice": "Get the current allowance from `owner` for `spender`"
      },
      "approve(address,uint256)": {
        "notice": "Approve `spender` to transfer up to `amount` from `src`"
      },
      "balanceOf(address)": {
        "notice": "Get the token balance of the `owner`"
      },
      "balanceOfUnderlying(address)": {
        "notice": "Get the underlying balance of the `owner`"
      },
      "borrow(uint256)": {
        "notice": "Sender borrows assets from the protocol to their own address"
      },
      "borrowBalanceCurrent(address)": {
        "notice": "Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex"
      },
      "borrowBalanceStored(address)": {
        "notice": "Return the borrow balance of account based on stored data"
      },
      "borrowRatePerBlock()": {
        "notice": "Returns the current per-block borrow interest rate for this cToken"
      },
      "constructor": "Construct a new CEther money market",
      "exchangeRateCurrent()": {
        "notice": "Accrue interest then return the up-to-date exchange rate"
      },
      "exchangeRateStored()": {
        "notice": "Calculates the exchange rate from the underlying to the CToken"
      },
      "getAccountSnapshot(address)": {
        "notice": "Get a snapshot of the account's balances, and the cached exchange rate"
      },
      "getCash()": {
        "notice": "Get cash balance of this cToken in the underlying asset"
      },
      "initialize(address,address,uint256,string,string,uint8)": {
        "notice": "Initialize the money market"
      },
      "liquidateBorrow(address,address)": {
        "notice": "The sender liquidates the borrowers collateral. The collateral seized is transferred to the liquidator."
      },
      "mint()": {
        "notice": "Sender supplies assets into the market and receives cTokens in exchange"
      },
      "redeem(uint256)": {
        "notice": "Sender redeems cTokens in exchange for the underlying asset"
      },
      "redeemUnderlying(uint256)": {
        "notice": "Sender redeems cTokens in exchange for a specified amount of underlying asset"
      },
      "repayBorrow()": {
        "notice": "Sender repays their own borrow"
      },
      "repayBorrowBehalf(address)": {
        "notice": "Sender repays a borrow belonging to borrower"
      },
      "seize(address,address,uint256)": {
        "notice": "Transfers collateral tokens (this market) to the liquidator."
      },
      "supplyRatePerBlock()": {
        "notice": "Returns the current per-block supply interest rate for this cToken"
      },
      "totalBorrowsCurrent()": {
        "notice": "Returns the current total borrows plus accrued interest"
      },
      "transfer(address,uint256)": {
        "notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfer `amount` tokens from `src` to `dst`"
      }
    },
    "notice": "CToken which wraps Ether"
  }
}